<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna,Version=3.0.0.0,Culture=neutral,PublicKeyToken=31bf3856ad364e35"    
    xmlns:local="clr-namespace:Adalbertus.BudgetPlanner.Controls"
    xmlns:conv="clr-namespace:Adalbertus.BudgetPlanner.Converters">
    <conv:DebugConverter x:Key="DebugConverter" />

    <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
        <GradientStop Color="#ABADB3" Offset="0.05"/>
        <GradientStop Color="#E2E3EA" Offset="0.07"/>
        <GradientStop Color="#E3E9EF" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TextBox_MouseOver" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#5794BF" Offset="0.05"/>
        <GradientStop Color="#B7D5EA" Offset="0.07"/>
        <GradientStop Color="#C7E2F1" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TextBox_Focused" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#3D7BAD" Offset="0.05"/>
        <GradientStop Color="#A4C9E3" Offset="0.07"/>
        <GradientStop Color="#B7D9ED" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TextBox_DisabledBorder" Color="#ADB2B5" />
    <SolidColorBrush x:Key="TextBox_DisabledBackground" Color="#F4F4F4" />

    <!-- BEGIN: ImageButton -->
    <Style x:Key="ButtonFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="3" StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2" SnapsToDevicePixels="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="ButtonBackgroundBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientBrush.GradientStops>
            <GradientStop Color="#FFFFFFFF" Offset="0" />
            <GradientStop Color="#FFF0F0EA" Offset="0.9" />
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ButtonBorderBrush" Color="#FF003C74" />

    <Style x:Key="{x:Type local:ImageButton}" TargetType="{x:Type local:ImageButton}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisualStyle}" />
        <Setter Property="Control.Background" Value="{StaticResource ButtonBackgroundBackground}" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonBorderBrush}" />
        <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageButton}">
                    
                    <theme:ButtonChrome Name="Chrome" ThemeColor="NormalColor" 
                                        BorderBrush="{TemplateBinding Control.BorderBrush}" 
                                        Fill="{TemplateBinding Control.Background}" 
                                        RenderDefaulted="{TemplateBinding Button.IsDefaulted}" 
                                        RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" 
                                        RenderPressed="{TemplateBinding ButtonBase.IsPressed}" 
                                        SnapsToDevicePixels="True">
                        <Grid Margin="0" HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Image x:Name="ImageControl" Grid.Column="0"
                                   Source="{Binding ImageSource, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ImageButton}}}"
                                   HorizontalAlignment="Left" Margin="4,0,0,0"
                                   Height="{Binding ImageHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ImageButton}}}"
                                   Width="{Binding ImageWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ImageButton}}}">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.35"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <ContentPresenter x:Name="ContentPresenterControl" Grid.Column="1" 
                                              Margin="4,2,4,2"
                                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />                            
                        </Grid>
                    </theme:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.Content" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ContentPresenterControl"/>
                            <Setter Property="HorizontalAlignment" Value="Center" TargetName="ImageControl"/>
                            <Setter Property="Margin" Value="0" TargetName="ImageControl"/>                            
                        </Trigger>
                        <Trigger Property="ImageSource" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ImageControl"/>
                            <Setter Property="HorizontalAlignment" Value="Center" TargetName="ImageControl"/>
                            <Setter Property="Margin" Value="4,2,4,2" TargetName="ContentPresenterControl"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                            <Setter TargetName="Chrome" Property="theme:ButtonChrome.RenderDefaulted" Value="True" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="Chrome" Property="theme:ButtonChrome.RenderPressed" Value="True" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--<Style x:Key="{x:Type local:ImageButton}" BasedOn="{StaticResource ButtonDefaultStyle}" TargetType="{x:Type local:ImageButton}" />-->
    <!-- END: ImageButton -->
    
    <!-- BEGIN: WatermarkTextBoxExt -->
    
    <DataTemplate x:Key="DefaultWatermarkTemplate">
        <ContentControl Content="{Binding}" Foreground="Gray" Focusable="False" />
    </DataTemplate>

    <Style TargetType="{x:Type local:WatermarkTextBoxExt}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="3" />
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="WatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WatermarkTextBoxExt}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Border" Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="1" Background="{TemplateBinding Background}" />
                        <Border x:Name="MouseOverVisual" Grid.Column="0" Grid.ColumnSpan="2" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource TextBox_MouseOver}" CornerRadius="1" />
                        <Border x:Name="FocusVisual" Grid.Column="0" Grid.ColumnSpan="2" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource TextBox_Focused}" CornerRadius="1" />

                        <ScrollViewer Grid.Column="0" x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <ContentPresenter x:Name="PART_WatermarkHost" Grid.Column="0" 
                                          Content="{TemplateBinding Watermark}"
                                          ContentTemplate="{TemplateBinding WatermarkTemplate}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"                                       
                                          IsHitTestVisible="False"
                                          Margin="{TemplateBinding Padding}"
                                          Visibility="Collapsed"/>
                        <Border x:Name="PART_ClearIconBorder" Grid.Column="1" Padding="1,1,2,1" ToolTip="Wyczyść"
                                Visibility="Collapsed" BorderThickness="1" Width="18" Height="18" BorderBrush="Transparent" 
                                HorizontalAlignment="Right" >
                            <Image x:Name="imgClear" Height="16" Source="/Adalbertus.BudgetPlanner;component/Images/clear-text.png" HorizontalAlignment="Right" />                            
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False"></Condition>
                                <Condition Property="Text" Value=""></Condition>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Visibility" TargetName="PART_WatermarkHost" Value="Visible"></Setter>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsClearButtonVisible" Value="True">
                            <Setter TargetName="PART_ClearIconBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverVisual" Property="Opacity"  Value="1" />                            
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="FocusVisual" Property="Opacity"  Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border"  Property="BorderBrush" Value="{StaticResource TextBox_DisabledBorder}"/>
                            <Setter TargetName="Border"  Property="Background" Value="{StaticResource TextBox_DisabledBackground}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- END: WatermarkTextBoxExt -->
</ResourceDictionary>