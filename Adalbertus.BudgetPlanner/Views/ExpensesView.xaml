<UserControl x:Class="Adalbertus.BudgetPlanner.Views.ExpensesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:ext="clr-namespace:Adalbertus.BudgetPlanner.Extensions"
             xmlns:extToolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit/extended"
             xmlns:ctrl="clr-namespace:Adalbertus.BudgetPlanner.Controls"
             xmlns:vm="clr-namespace:Adalbertus.BudgetPlanner.ViewModels"
             xmlns:m="clr-namespace:Adalbertus.BudgetPlanner.Models"
             KeyboardNavigation.TabNavigation="Local"
>
    <UserControl.Resources>
        <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource {x:Type Expander}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsExpensesFiltered}" Value="True">
                    <Setter Property="BorderBrush" Value="OrangeRed" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Background" Value="{StaticResource RedGradientVertical}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>


        <DataTemplate x:Key="ExpensesCalculatorTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="{Binding Value, Converter={StaticResource CurrencyFormatter}}" 
                           TextAlignment="Right" Margin="2,2,20,2"/>
                <ctrl:ImageButton x:Name="AddSubstractButton" Grid.Column="1" ToolTip="Odejmij" ImageUrl="Images/substract.png" 
                                  cal:Message.Attach="[Event Click] = [Action InverseExpenseValueInCalculator($dataContext)]"
                                  Margin="2"/>
                <ctrl:ImageButton Grid.Column="2" ToolTip="Usuń" ImageUrl="Images/delete.png" Margin="2"
                                  cal:Message.Attach="[Event Click] = [Action RemoveExpenseValueFromCalculator($dataContext)]" />
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Value, Converter={StaticResource LessThan}}" Value="True">
                    <Setter TargetName="AddSubstractButton" Property="ImageUrl" Value="Images/add.png" />
                    <Setter TargetName="AddSubstractButton" Property="ToolTip" Value="Dodaj" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="200" />
        </Grid.ColumnDefinitions>
        <Expander Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,4,0,4" 
                  KeyboardNavigation.TabNavigation="Local">
            <Expander.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <WrapPanel ext:MarginSetterExtension.Margin="2" Grid.Column="0" VerticalAlignment="Center">
                        <TextBlock>Filtrowanie</TextBlock>
                        <CheckBox IsChecked="{Binding IsFilteringEnabled}" Content="Włącz filtrowanie" Visibility="Collapsed" />
                    </WrapPanel>
                    <WrapPanel Orientation="Vertical" Grid.Column="1" HorizontalAlignment="Right">
                        <WrapPanel ext:MarginSetterExtension.Margin="2,0" HorizontalAlignment="Right">
                            <TextBlock Text="Łączna widoczna kwota" FontSize="10"/>
                            <TextBlock Text="{Binding TotalExpensesValue,Converter={StaticResource CurrencyFormatter}}"
                                       FontSize="10"/>
                        </WrapPanel>
                        <WrapPanel ext:MarginSetterExtension.Margin="2,0" HorizontalAlignment="Right"
                                   Visibility="{Binding IsExpensesFiltered, Converter={StaticResource Visibility}}">
                            <TextBlock Text="Widocznych pozycji" FontSize="10"/>
                            <TextBlock Text="{Binding BudgetExpensesFilteredCount}" FontSize="10"/>
                            <TextBlock Text="z" FontSize="10"/>
                            <TextBlock Text="{Binding BudgetExpensesTotalCount}" FontSize="10"/>
                        </WrapPanel>
                    </WrapPanel>
                </Grid>
            </Expander.Header>
            <ContentControl x:Name="ExpensesFilteringViewModel" />
        </Expander>

        <DataGrid Grid.Row="1" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                  ItemsSource="{Binding BudgetExpenses}"
                  ext:DataGridExtensions.ScrollToItem="{Binding ScrollToExpense}"
                  CanUserAddRows="False" CanUserDeleteRows="False"
                  ScrollViewer.CanContentScroll="True" 
                  AutoGenerateColumns="False" RowHeaderWidth="0">
            <DataGrid.Columns>
                <DataGridTemplateColumn CanUserReorder="False" CanUserResize="False" Width="25">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ctrl:ImageButton ToolTip="Usuń" ImageUrl="Images/delete.png"
                                                  cal:Message.Attach="[Event Click] = [Action RemoveExpense($dataContext)]" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Grupa" Binding="{Binding GroupName}" Width="100" IsReadOnly="True" />
                <DataGridTemplateColumn Header="Kategoria" SortMemberPath="Flow.Name" Width="150">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Flow.Name}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ctrl:AutoCompleteBox ItemsSource="{Binding DataContext.ExpensesGridCashFlows, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                                                  SelectedItem="{Binding Flow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  BorderThickness="0" CanBeEmpty="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Data" SortMemberPath="Date" Width="80">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Date, Converter={StaticResource DateFormatter}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding Date, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        SelectedDateFormat="Long" BorderThickness="0"
                                        DisplayDateStart="{Binding Budget.DateFrom}" DisplayDateEnd="{Binding Budget.DateTo}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn SortMemberPath="Value" Width="100" Header="Kwota">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Value, Converter={StaticResource CurrencyFormatter}}"
                                       TextAlignment="Right"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ctrl:CalculatorTextBox Value="{Binding Value, UpdateSourceTrigger=LostFocus}"
                                                 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                    BorderThickness="0"
                                                    ToolTip="Dopuszczalne są też wyrażenia matematyczne, np.: (250-3*3,56)+10"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn >
                <DataGridTextColumn Header="Opis" Binding="{Binding Description}" Width="*"/>
            </DataGrid.Columns>
        </DataGrid>

        <GroupBox Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                  Header="Wstaw wydatek" Margin="4,0">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                
                
                <TextBlock Grid.Row="0" Text="Kategoria" Margin="0,0,4,4"/>
                <ctrl:AutoCompleteBox Grid.Row="1" ItemsSource="{Binding CashFlows}" Watermark="Wpisz nazwę kategorii"
                                      SelectedItem="{Binding SelectedExpenseCashFlow}" Focusable="True"
                                      CanBeEmpty="False">
                    <i:Interaction.Triggers>
                        <ext:KeyTrigger Key="Enter" FocusTarget="{Binding ElementName=ExpenseValueControl}">
                        </ext:KeyTrigger>
                    </i:Interaction.Triggers>
                </ctrl:AutoCompleteBox>

                <TextBlock Grid.Row="2" Text="Data" Margin="0,8,4,4"/>
                <DatePicker Grid.Row="3" x:Name="ExpenseDate" SelectedDate="{Binding SelectedExpenseDate}" 
                            SelectedDateFormat="Long" DisplayDateStart="{Binding Budget.DateFrom}"
                            DisplayDateEnd="{Binding Budget.DateTo}">
                    <i:Interaction.Triggers>
                        <ext:KeyTrigger Key="Enter" FocusTarget="{Binding ElementName=ExpenseValueControl}">
                        </ext:KeyTrigger>
                    </i:Interaction.Triggers>
                </DatePicker>

                <TextBlock Grid.Row="4" Text="Kwota" Margin="0,8,4,4"/>
                <ctrl:CalculatorTextBox Grid.Row="5" x:Name="ExpenseValueControl" Value="{Binding ExpenseValue}"
                                     VerticalAlignment="Stretch" Watermark="Wstaw kwotę"
                                     ext:FocusExtension.IsFocused="{Binding IsExpenseValueFocused}"
                                     ToolTip="Dopuszczalne są też wyrażenia matematyczne, np.: (250-3*3,56)+10">

                    <i:Interaction.Triggers>
                        <ext:KeyTrigger Key="Enter" Modifiers="Control">
                            <cal:ActionMessage MethodName="AddAndMoveToExpenseValue" />
                        </ext:KeyTrigger>
                        <ext:KeyTrigger Key="Enter" FocusTarget="{Binding ElementName=ExpenseDescription}">
                        </ext:KeyTrigger>
                    </i:Interaction.Triggers>
                </ctrl:CalculatorTextBox>

                <TextBlock Grid.Row="6" Text="Opis" Margin="0,8,4,4"/>
                <extToolkit:WatermarkTextBox Grid.Row="7" Name="ExpenseDescription" Text="{Binding ExpenseDescription, UpdateSourceTrigger=PropertyChanged}"
                                             VerticalAlignment="Stretch"
                                             Watermark="Opis">
                    <i:Interaction.Triggers>
                        <ext:KeyTrigger Key="Enter">
                            <cal:ActionMessage MethodName="AddAndMoveToExpenseValue" />
                        </ext:KeyTrigger>
                    </i:Interaction.Triggers>
                </extToolkit:WatermarkTextBox>

                <ctrl:ImageButton Grid.Row="8" Content="Wstaw" Margin="0,8,0,4"
                                  ImageUrl="Images/basket-add.png" cal:Message.Attach="[Event Click] = [Action AddExpense()]" />                
            </Grid>
            </ScrollViewer>
        </GroupBox>
    </Grid>
</UserControl>
