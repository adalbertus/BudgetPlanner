<UserControl x:Class="Adalbertus.BudgetPlanner.Views.SavingsView"
xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:ctrl="clr-namespace:Adalbertus.BudgetPlanner.Controls"
             xmlns:m="clr-namespace:Adalbertus.BudgetPlanner.Models"
>
    <UserControl.Resources>
        <Style TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>

        <DataTemplate DataType="{x:Type m:Saving}">
            <Expander Style="{StaticResource DarkExpander}" IsExpanded="False">
                <Expander.Header>
                    <Grid Margin="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <WrapPanel Grid.Column="0">
                            <TextBlock>Nazwa</TextBlock>
                            <TextBox Text="{Binding Name}" Width="150" Margin="0,0,4,0" />
                            <TextBlock Margin="0,0,2,0" Text="Saldo początkowe" />
                            <ctrl:NumericTextBox ToolTip="Saldo początkowe" Value="{Binding StartingBalance}"
                                                 Width="60" Margin="0,0,4,0"/>
                            <TextBlock Margin="0,0,2,0" Text="Saldo" />
                            <TextBlock Text="{Binding TotalValue, Converter={StaticResource CurrencyFormatter}}" />
                        </WrapPanel>
                        <ctrl:ImageButton Grid.Column="1" x:Name="RemoveSavingButton" Content="Usuń konto oszczędnościowe" ImageUrl="Images/delete.png"
                                          cal:Message.Attach="[Event Click] = [Action RemoveSaving($dataContext)]"
                                          ToolTipService.ShowOnDisabled="True"/>

                    </Grid>
                </Expander.Header>
                <ListView ItemsSource="{Binding Values}" MaxHeight="350" Margin="4">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Data" DisplayMemberBinding="{Binding Date, Converter={StaticResource DateFormatter}}" 
                                            Width="90"/>
                            <GridViewColumn Header="Kwota"
                                            Width="120">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <TextBlock x:Name="readOnlyValue" Text="{Binding Value, Converter={StaticResource CurrencyFormatter}}" TextAlignment="Right" />
                                            <ctrl:NumericTextBox x:Name="readWriteValue" Value="{Binding Value}" TextAlignment="Right" Visibility="Collapsed"/>
                                        </Grid>
                                        <!-- 
                                        this trigger allows user who start using app from version 0.9.7 and manualy added 
                                        values to edit them, since 0.9.8 you cannot manually add saving value 
                                        -->
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsReadOnly}" Value="False">
                                                <Setter TargetName="readOnlyValue" Property="Visibility" Value="Collapsed"/>
                                                <Setter TargetName="readWriteValue" Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Opis" DisplayMemberBinding="{Binding Description}" />
                        </GridView>
                    </ListView.View>
                </ListView>
            </Expander>

            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Values, Converter={StaticResource IsEmpty}}" Value="False">
                    <Setter TargetName="RemoveSavingButton" Property="IsEnabled" Value="False" />
                    <Setter TargetName="RemoveSavingButton" Property="ToolTip" Value="Nie można usunąć konta oszczędnościowego, ponieważ posiada zdefiniowane wartości" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <GroupBox Grid.Column="0" ScrollViewer.VerticalScrollBarVisibility="Auto">
            <GroupBox.Header>
                <WrapPanel>
                    <Label>Konta oszczędnościowe</Label>
                    <ctrl:ImageButton ImageUrl="Images/save.png" Content="Dodaj nowe konto"
                                      cal:Message.Attach="[Event Click] = [Action AddSaving()]"/>
                </WrapPanel>
            </GroupBox.Header>
            <ScrollViewer VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                <ItemsControl ItemsSource="{Binding Savings}" BorderThickness="0" />
            </ScrollViewer>
        </GroupBox>
        <Border Grid.Column="1" Style="{StaticResource DefaultBorder}" Width="300"
                VerticalAlignment="Top" Margin="2,17,0,0">
            <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True">
                <TextBlock TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="4">
                <TextBlock.Inlines>
                    Tworząc nowe konto oszczędnościowe podajemy jakie jest jego saldo początkowe.
                    Zasilenie konta oszczędnościowego jest jednoznaczne z wydaniem pieniędzy z budżetu na ten cel.
                    W praktyce oznacza to, że należy dodać wydatek na konto oszczędnościowe - wtedy kwota podana w wydatku pojawi
                    się jako środek zasilający konto.
                    <LineBreak/><LineBreak/>
                    Zdefiniowane tutaj oszczędności w razie potrzeby można wykorzystać w planie budżetowym jako dodadkowe wpływy.
                    <LineBreak/><LineBreak/>
                    <Bold>Przykład:</Bold>
                    <LineBreak/>
                    Mamy specjalne konto oszczędnościowe, na które odkładamy regularnie pieniądze
                    na wydatki związane z samochodem (np. OC, AC, warsztat itp). W przypadku
                    pojawienia się konieczności zapłacenia OC i AC możemy pieniądze na taki wydatek
                    wprowadzić do budżetu jako wpływy z oszczędności.
                    <LineBreak/><LineBreak/>
                    Wstawiona kwota wpływu z oszczędności jest automatycznie odnotowywana na liście
                    oszczędności.
                    <LineBreak/>
                    Podobnie wstawienie wydatku przypisanego do kategorii oszczędności automatycznie
                    wstawi odpowiednią kwotę na liście oszczędności.                    
                </TextBlock.Inlines>
                </TextBlock>
            </ScrollViewer>
        </Border>
    </Grid>
</UserControl>
