<UserControl x:Class="Adalbertus.BudgetPlanner.Views.SavingsView"
xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:ctrl="clr-namespace:Adalbertus.BudgetPlanner.Controls"
             xmlns:m="clr-namespace:Adalbertus.BudgetPlanner.Models"
>
    <UserControl.Resources>
        <DataTemplate DataType="{x:Type m:Saving}">
            <GroupBox Margin="4">
                <GroupBox.Header>
                    <WrapPanel>
                        <Label>Nazwa</Label>
                        <TextBox Text="{Binding Name}" Width="150"/>
                        <Label>Łączna kwota</Label>
                        <Label Content="{Binding TotalValue, Converter={StaticResource CurrencyFormatter}}" />
                        <!-- I don't know why setting ImageUrl in style doesn't work in DataTemplate -->
                        <ctrl:ImageButton x:Name="RemoveSavingButton" Content="Usuń konto oszczędnościowe" ImageUrl="Images/delete.png"
                                                          cal:Message.Attach="[Event Click] = [Action RemoveSaving($dataContext)]"/>
                        <ctrl:ImageButton ImageUrl="Images/save.png" Content="TODO: Do zmiany na - kwotę początkową" cal:Message.Attach="[Event Click] = [Action AddSavingValue($dataContext)]"/>
                    </WrapPanel>
                </GroupBox.Header>
                <DataGrid x:Name="ValuesDataGrid" ItemsSource="{Binding Values}" CanUserAddRows="False" 
                                          CanUserDeleteRows="False" RowHeaderWidth="0"
                                          VerticalScrollBarVisibility="Auto" Margin="0,4"
                                          AutoGenerateColumns="False" MaxHeight="220">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Width="28">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ctrl:ImageButton ToolTip="Usuń" ImageUrl="Images/delete.png"
                                                                      IsEnabled="{Binding IsReadOnly, Converter={StaticResource Not}}"
                                                                      cal:Message.Attach="[Event Click] = [Action RemoveSavingValue($dataContext)]"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Data" Width="110">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <DatePicker x:Name="Date" SelectedDate="{Binding Date, UpdateSourceTrigger=LostFocus}"
                                                                   SelectedDateFormat="Long" BorderThickness="0" />
                                        <TextBlock x:Name="DateReadOnly" Text="{Binding Date, Converter={StaticResource DateFormatter}}" Visibility="Collapsed"/>
                                    </StackPanel>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsReadOnly}" Value="true">
                                            <Setter TargetName="Date" Property="Visibility" Value="Collapsed" />
                                            <Setter TargetName="DateReadOnly" Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn  Header="Kwota" Width="120">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ctrl:NumericTextBox Value="{Binding Value, UpdateSourceTrigger=LostFocus}" 
                                                                         BorderThickness="0" IsReadOnly="{Binding IsReadOnly}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Uwagi" Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBox x:Name="Text" Text="{Binding Description, UpdateSourceTrigger=LostFocus}" BorderThickness="0"/>
                                        <TextBlock x:Name="TextReadOnly" Text="{Binding Description}" Visibility="Collapsed"/>
                                    </StackPanel>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsReadOnly}" Value="true">
                                            <Setter TargetName="Text" Property="Visibility" Value="Collapsed" />
                                            <Setter TargetName="TextReadOnly" Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </GroupBox>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Values, Converter={StaticResource IsEmpty}}" Value="False">
                    <Setter TargetName="RemoveSavingButton" Property="IsEnabled" Value="False" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <GroupBox Grid.Column="0" ScrollViewer.VerticalScrollBarVisibility="Auto">
            <GroupBox.Header>
                <WrapPanel>
                    <Label>Konta oszczędnościowe</Label>
                    <ctrl:ImageButton ImageUrl="Images/save.png" Content="Dodaj nowe konto"
                                      cal:Message.Attach="[Event Click] = [Action AddSaving()]"/>
                </WrapPanel>
            </GroupBox.Header>
            <ScrollViewer VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                <ItemsControl ItemsSource="{Binding Savings}" BorderThickness="0" />
            </ScrollViewer>
        </GroupBox>
        <Border Grid.Column="1" Style="{StaticResource DefaultBorder}" Width="300"
                VerticalAlignment="Top" Margin="4,17">

            <TextBlock TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="4">
                <TextBlock.Inlines>
                    Zdefiniowane tutaj oszczędności w razie potrzeby można wykorzystać w
                    planie budżetowym jako dodadkowe wpływy.
                    <LineBreak/><LineBreak/>
                    <Bold>Przykład:</Bold>
                    <LineBreak/>
                    Mamy specjalne konto oszczędnościowe, na które odkładamy regularnie pieniądze
                    na wydatki związane z samochodem (np. OC, AC, warsztat itp). W przypadku
                    pojawienia się konieczności zapłacenia OC i AC możemy pieniądze na taki wydatek
                    wprowadzić do budżetu jako wpływy z oszczędności.
                    <LineBreak/><LineBreak/>
                    Wstawiona kwota wpływu z oszczędności jest automatycznie odnotowywana na liście
                    oszczędności.
                    <LineBreak/>
                    Podobnie wstawienie wydatku przypisanego do kategorii oszczędności automatycznie
                    wstawi odpowiednią kwotę na liście oszczędności.                    
                </TextBlock.Inlines>
            </TextBlock>
        </Border>
    </Grid>
</UserControl>
