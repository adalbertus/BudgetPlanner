<UserControl x:Class="Adalbertus.BudgetPlanner.Views.IncomesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:ctrl="clr-namespace:Adalbertus.BudgetPlanner.Controls"
             xmlns:m="clr-namespace:Adalbertus.BudgetPlanner.Models"
>
    <UserControl.Resources>
        <DataTemplate DataType="{x:Type m:Income}">
            <GroupBox Margin="4">
                <GroupBox.Header>
                    <WrapPanel>
                        <Label>Nazwa</Label>
                        <TextBox Text="{Binding Name}" Width="150" />
                        <Label>Łącznie</Label>
                        <Label Content="{Binding TotalValue, Converter={StaticResource CurrencyFormatter}}" />
                        <!-- I don't know why setting ImageUrl in style doesn't work in DataTemplate -->
                        <ctrl:ImageButton ToolTip="Usuń źródło przychodów" ImageUrl="Images/delete.png"
                                                          cal:Message.Attach="[Event Click] = [Action RemoveIncome($dataContext)]"/>
                    </WrapPanel>
                </GroupBox.Header>
                <DataGrid ItemsSource="{Binding Values}" CanUserAddRows="False" 
                                          CanUserDeleteRows="False" RowHeaderWidth="0" Margin="0,4"
                                          AutoGenerateColumns="False" MaxHeight="220" IsReadOnly="True"
                                          VerticalScrollBarVisibility="Auto">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Data" Binding="{Binding Date, Converter={StaticResource DateFormatter}}" Width="90"/>
                        <DataGridTextColumn Header="Kwota" Binding="{Binding Value, Converter={StaticResource CurrencyFormatter}}" Width="120"/>
                        <DataGridTextColumn Header="Uwagi" Binding="{Binding Description}" Width="*" Visibility="Collapsed" />
                    </DataGrid.Columns>
                </DataGrid>
            </GroupBox>
        </DataTemplate>

    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <GroupBox Grid.Column="0" ScrollViewer.VerticalScrollBarVisibility="Auto">
            <GroupBox.Header>
                <WrapPanel>
                    <Label>Przychody</Label>
                    <ctrl:ImageButton ImageUrl="Images/save.png" Content="Wstaw nowe źródło dochodów"
                                      cal:Message.Attach="[Event Click] = [Action AddIncome()]"/>
                </WrapPanel>
            </GroupBox.Header>
            <ScrollViewer VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                <ItemsControl ItemsSource="{Binding Incomes}" />
            </ScrollViewer>
        </GroupBox>
        <Border Grid.Column="1" Style="{StaticResource DefaultBorder}" Width="300" VerticalAlignment="Top" Margin="4">

            <TextBlock TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="4">
                <TextBlock.Inlines>
                        W tym oknie definiujemy tylko i wyłącznie źródła dochodów dostępne dla budżetu. Może to być nazwa firmy,
                        w której pracujemy, ale również cokolwiek innego co może być potraktowane jako dochód - np. wygrana w
                    konkursie.
                    <LineBreak/><LineBreak/>
                        Wstawianie poszczególnych wartości dochodów odbywa się poprzez dodanie wpływów budżetodych do planowanego budżetu
                        (czyli np. wpisanie otrzymanej wypłaty).
                    <LineBreak/><LineBreak/>
                        Każdy dochód jest ściśle powiązany z budżetem, a więc zmiana wartości dochodu dokonana we wpływach budżetowych
                        powoduje zmianę tego dochodu w tym oknie.
                </TextBlock.Inlines>
            </TextBlock>
        </Border>
    </Grid>
</UserControl>
