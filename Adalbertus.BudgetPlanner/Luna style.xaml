<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna,Version=3.0.0.0,Culture=neutral,PublicKeyToken=31bf3856ad364e35" xmlns:ui="clr-namespace:System.Windows.Documents;assembly=PresentationUI">
  <Style x:Key="Ñ">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="3" StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="Ò" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFFFF" Offset="0" />
      <GradientStop Color="#FFF0F0EA" Offset="0.9" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="Ó" Color="#FF003C74" />
  <Style x:Key="Ô" TargetType="{x:Type ButtonBase}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource Ñ}" />
    <Setter Property="Control.Background" Value="{StaticResource Ò}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource Ó}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <theme:ButtonChrome Name="Chrome" ThemeColor="NormalColor" BorderBrush="{TemplateBinding Control.BorderBrush}" Fill="{TemplateBinding Control.Background}" RenderDefaulted="{TemplateBinding Button.IsDefaulted}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" SnapsToDevicePixels="True">
            <ContentPresenter Margin="{TemplateBinding Control.Padding}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </theme:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
              <Setter TargetName="Chrome" Property="theme:ButtonChrome.RenderDefaulted" Value="True" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Chrome" Property="theme:ButtonChrome.RenderPressed" Value="True" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ToggleButton}" BasedOn="{StaticResource Ô}" TargetType="{x:Type ToggleButton}" />
  <Style x:Key="{x:Type RepeatButton}" BasedOn="{StaticResource Ô}" TargetType="{x:Type RepeatButton}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
  </Style>
  <Style x:Key="{x:Type Button}" BasedOn="{StaticResource Ô}" TargetType="{x:Type Button}" />
  <Style x:Key="Õ">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="14,0,0,0" StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ö">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="1" StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="×">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFD2D4D2" Offset="0" />
      <GradientStop Color="#FFFFFFFF" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ø">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FF004C94" Offset="0" />
      <GradientStop Color="#FF003C74" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Background" Value="{StaticResource ×}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource Ø}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource Ö}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <BulletDecorator Background="#00FFFFFF" SnapsToDevicePixels="True">
            <BulletDecorator.Bullet>
              <theme:BulletChrome Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" IsChecked="{TemplateBinding ToggleButton.IsChecked}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" />
            </BulletDecorator.Bullet>
            <ContentPresenter Margin="{TemplateBinding Control.Padding}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </BulletDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="ContentControl.HasContent" Value="True">
              <Setter Value="{StaticResource Õ}" Property="FrameworkElement.FocusVisualStyle" />
              <Setter Property="Control.Padding" Value="2,0,0,0" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DataTemplate x:Key="{DataTemplateKey {x:Type CollectionViewGroup}}" DataType="{x:Type CollectionViewGroup}">
    <ContentPresenter ContentStringFormat="{TemplateBinding ContentPresenter.ContentStringFormat}" Content="{Binding Path=Name}" />
  </DataTemplate>
  <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
    <Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.Padding" Value="3,0,3,0" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
              <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ContentControl}" TargetType="{x:Type ContentControl}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContentControl}">
          <ContentPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
    <Setter Property="Control.Padding" Value="2" />
    <Setter Property="Grid.IsSharedSizeScope" Value="True" />
    <Setter Property="ContextMenu.HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContextMenu}">
          <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent" SnapsToDevicePixels="True">
            <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
              <ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}}">
                <ItemsPresenter Margin="{TemplateBinding Control.Padding}" KeyboardNavigation.DirectionalNavigation="Cycle" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
              </ScrollViewer>
            </Border>
          </theme:SystemDropShadowChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ContextMenu.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
    <Setter Property="FlowDocument.TextAlignment" Value="Justify" />
    <Setter Property="FlowDocument.FontFamily" Value="Georgia" />
    <Setter Property="FlowDocument.FontSize" Value="16.0" />
  </Style>
  <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
    <Setter Property="TextBlock.TextWrapping" Value="NoWrap" />
    <Setter Property="TextBlock.TextTrimming" Value="None" />
  </Style>
  <Style x:Key="{x:Type Bold}" TargetType="{x:Type Bold}">
    <Setter Property="TextElement.FontWeight" Value="Bold" />
  </Style>
  <Style x:Key="{x:Type Italic}" TargetType="{x:Type Italic}">
    <Setter Property="TextElement.FontStyle" Value="Italic" />
  </Style>
  <Style x:Key="{x:Type Underline}" TargetType="{x:Type Underline}">
    <Setter Property="Inline.TextDecorations" Value="Underline" />
  </Style>
  <Style x:Key="{x:Type Paragraph}" TargetType="{x:Type Paragraph}">
    <Setter Property="Block.Margin" Value="Auto" />
  </Style>
  <Style x:Key="{x:Type List}" TargetType="{x:Type List}">
    <Setter Property="Block.Margin" Value="Auto" />
    <Setter Property="Block.Padding" Value="Auto" />
  </Style>
  <Style x:Key="{x:Type Floater}" TargetType="{x:Type Floater}">
    <Setter Property="Floater.HorizontalAlignment" Value="Right" />
  </Style>
  <DataTemplate x:Key="{DataTemplateKey {x:Type FlowDocument}}" DataType="{x:Type FlowDocument}">
    <FlowDocumentReader Document="{Binding}" />
  </DataTemplate>
  <DataTemplate x:Key="{DataTemplateKey {x:Type FixedDocument}}" DataType="{x:Type FixedDocument}">
    <DocumentViewer Document="{Binding}" />
  </DataTemplate>
  <DataTemplate x:Key="{DataTemplateKey {x:Type FixedDocumentSequence}}" DataType="{x:Type FixedDocumentSequence}">
    <DocumentViewer Document="{Binding}" />
  </DataTemplate>
  <LinearGradientBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=DocumentViewerToolBarGradient}" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="{x:Static SystemColors.InactiveCaptionTextColor}" Offset="0" />
      <GradientStop Color="{x:Static SystemColors.InactiveCaptionColor}" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Þ" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="{x:Static SystemColors.InactiveCaptionTextColor}" Offset="1" />
      <GradientStop Color="{x:Static SystemColors.InactiveCaptionColor}" Offset="0" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Type DocumentViewer}" TargetType="{x:Type DocumentViewer}" BasedOn="{x:Null}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="FrameworkElement.ContextMenu" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type ui:PresentationUIStyleResources},ResourceId=PUIDocumentViewerContextMenu}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DocumentViewer}">
          <Border BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" Focusable="False">
            <Grid Background="{TemplateBinding Control.Background}" KeyboardNavigation.TabNavigation="Local">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <ContentControl Grid.Row="0" Grid.Column="0" Focusable="{TemplateBinding UIElement.Focusable}" TabIndex="0" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type ui:PresentationUIStyleResources},ResourceId=PUIDocumentViewerToolBarStyleKey}}" />
              <ScrollViewer Name="PART_ContentHost" Grid.Row="1" Grid.Column="0" CanContentScroll="True" HorizontalScrollBarVisibility="Auto" Focusable="{TemplateBinding UIElement.Focusable}" IsTabStop="True" TabIndex="1" />
              <DockPanel Grid.Row="1">
                <FrameworkElement DockPanel.Dock="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                <Rectangle Visibility="Visible" VerticalAlignment="top" Height="10">
                  <Shape.Fill>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                      <GradientBrush.GradientStops>
                        <GradientStopCollection>
                          <GradientStop Color="#66000000" Offset="0" />
                          <GradientStop Color="Transparent" Offset="1" />
                        </GradientStopCollection>
                      </GradientBrush.GradientStops>
                    </LinearGradientBrush>
                  </Shape.Fill>
                </Rectangle>
              </DockPanel>
              <ContentControl Name="PART_FindToolBarHost" Grid.Row="2" Grid.Column="0" TabIndex="2" Focusable="{TemplateBinding UIElement.Focusable}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ß">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="0" StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2" SnapsToDevicePixels="True" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="à" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="Transparent" Offset="0.5" />
      <GradientStop Color="#30111111" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="á" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Control.Padding}">
            <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="19" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Ellipse Name="circle" Width="19" Height="19" Stroke="#FFA9A9A9" HorizontalAlignment="Center" VerticalAlignment="Center" />
              <Ellipse Name="shadow" Width="17" Height="17" Visibility="Hidden" HorizontalAlignment="Center" VerticalAlignment="Center" />
              <Path Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#FF666666" StrokeThickness="2" SnapsToDevicePixels="False" Data="M1,1.5L4.5,5 8,1.5" />
              <ContentPresenter Grid.Column="1" Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" SnapsToDevicePixels="True" RecognizesAccessKey="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M1,4.5L4.5,1 8,4.5" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF666666" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF222222" />
              <Setter TargetName="shadow" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="â" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Control.Padding}">
            <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="19" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid>
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="180" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <Ellipse Name="circle" Width="19" Height="19" Stroke="#FFA9A9A9" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Ellipse Name="shadow" Width="17" Height="17" Visibility="Hidden" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Path Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#FF666666" StrokeThickness="2" SnapsToDevicePixels="False" Data="M1,1.5L4.5,5 8,1.5" />
              </Grid>
              <ContentPresenter Grid.Column="1" Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" SnapsToDevicePixels="True" RecognizesAccessKey="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M1,4.5L4.5,1 8,4.5" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF666666" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF222222" />
              <Setter TargetName="shadow" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ã" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Control.Padding}">
            <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
              <Grid.RowDefinitions>
                <RowDefinition Height="19" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid>
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="90" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <Ellipse Name="circle" Width="19" Height="19" Stroke="#FFA9A9A9" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Ellipse Name="shadow" Width="17" Height="17" Visibility="Hidden" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Path Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#FF666666" StrokeThickness="2" SnapsToDevicePixels="False" Data="M1,1.5L4.5,5 8,1.5" />
              </Grid>
              <ContentPresenter Grid.Row="1" Margin="0,4,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" SnapsToDevicePixels="True" RecognizesAccessKey="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M1,4.5L4.5,1 8,4.5" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF666666" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF222222" />
              <Setter TargetName="shadow" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ä" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Control.Padding}">
            <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
              <Grid.RowDefinitions>
                <RowDefinition Height="19" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid>
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="-90" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <Ellipse Name="circle" Width="19" Height="19" Stroke="#FFA9A9A9" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Ellipse Name="shadow" Width="17" Height="17" Visibility="Hidden" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Path Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#FF666666" StrokeThickness="2" SnapsToDevicePixels="False" Data="M1,1.5L4.5,5 8,1.5" />
              </Grid>
              <ContentPresenter Grid.Row="1" Margin="0,4,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" SnapsToDevicePixels="True" RecognizesAccessKey="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M1,4.5L4.5,1 8,4.5" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF666666" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF222222" />
              <Setter TargetName="shadow" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Expander}" TargetType="{x:Type Expander}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" CornerRadius="3" SnapsToDevicePixels="True">
            <DockPanel>
              <ToggleButton Name="HeaderSite" DockPanel.Dock="Top" Margin="1" MinWidth="0" MinHeight="0" Style="{StaticResource á}" FocusVisualStyle="{StaticResource ß}" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderedContentControl.HeaderTemplateSelector}" Foreground="{TemplateBinding Control.Foreground}" Padding="{TemplateBinding Control.Padding}" FontFamily="{TemplateBinding Control.FontFamily}" FontSize="{TemplateBinding Control.FontSize}" FontStyle="{TemplateBinding Control.FontStyle}" FontStretch="{TemplateBinding Control.FontStretch}" FontWeight="{TemplateBinding Control.FontWeight}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
              <ContentPresenter Name="ExpandSite" DockPanel.Dock="Bottom" Visibility="Collapsed" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="{TemplateBinding Control.Padding}" />
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Expander.IsExpanded" Value="True">
              <Setter TargetName="ExpandSite" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Right">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
              <Setter Value="{StaticResource ä}" TargetName="HeaderSite" Property="FrameworkElement.Style" />
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Up">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
              <Setter Value="{StaticResource â}" TargetName="HeaderSite" Property="FrameworkElement.Style" />
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Left">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
              <Setter Value="{StaticResource ã}" TargetName="HeaderSite" Property="FrameworkElement.Style" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="í">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Fill="#80000000" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type GridSplitter}" TargetType="{x:Type GridSplitter}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    <Setter Property="GridSplitter.PreviewStyle" Value="{StaticResource í}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridSplitter}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="î" Color="#D0D0BF" />
  <SolidColorBrush x:Key="ï" Color="#0046D5" />
  <BorderGapMaskConverter x:Key="ð" />
  <Style x:Key="{x:Type GroupBox}" TargetType="{x:Type GroupBox}">
    <Setter Property="Control.BorderBrush" Value="{StaticResource î}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GroupBox}">
          <Grid SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="6" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="6" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="6" />
            </Grid.RowDefinitions>
            <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="#00FFFFFF" Background="{TemplateBinding Control.Background}" />
            <Border Name="Header" Padding="3,0,3,0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
              <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" TextElement.Foreground="{StaticResource ï}" />
            </Border>
            <ContentPresenter Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}">
              <UIElement.OpacityMask>
                <MultiBinding Converter="{StaticResource ð}" ConverterParameter="7">
                  <Binding ElementName="Header" Path="ActualWidth" />
                  <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                  <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
              </UIElement.OpacityMask>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type GroupItem}" TargetType="{x:Type GroupItem}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GroupItem}">
          <StackPanel>
            <ContentPresenter />
            <ItemsPresenter Margin="5,0,0,0" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type HeaderedContentControl}" TargetType="{x:Type HeaderedContentControl}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
          <StackPanel>
            <ContentPresenter ContentSource="Header" />
            <ContentPresenter />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
    <Setter Property="TextElement.Foreground" Value="#FF0000FF" />
    <Setter Property="Inline.TextDecorations" Value="Underline" />
    <Style.Triggers>
      <Trigger Property="ContentElement.IsMouseOver" Value="True">
        <Setter Property="TextElement.Foreground" Value="#FFFF0000" />
      </Trigger>
      <Trigger Property="ContentElement.IsEnabled" Value="False">
        <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
      </Trigger>
      <Trigger Property="ContentElement.IsEnabled" Value="True">
        <Setter Property="FrameworkContentElement.Cursor" Value="Hand" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type ItemsControl}" TargetType="{x:Type ItemsControl}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ItemsControl}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Label}" TargetType="{x:Type Label}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.Padding" Value="5" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
    <Setter Property="Control.VerticalContentAlignment" Value="Top" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Label}">
          <Border Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="Ý" Color="#FF7F9DB9" />
  <Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource Ý}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True" Padding="1">
            <ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="False">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.Padding" Value="2,0,0,0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ListBoxItem.IsSelected" Value="True">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
              <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="True" />
                <Condition Property="Selector.IsSelectionActive" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
              <Setter Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Control.Foreground" />
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static GridView.GridViewItemContainerStyleKey}" TargetType="{x:Type ListViewItem}">
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <GridViewRowPresenter VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ListBoxItem.IsSelected" Value="True">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
              <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="True" />
                <Condition Property="Selector.IsSelectionActive" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
              <Setter Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Control.Foreground" />
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <MenuScrollingVisibilityConverter x:Key="ü" />
  <Geometry x:Key="Ë">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
  <Geometry x:Key="ý">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
  <Geometry x:Key="þ">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
  <PathGeometry x:Key="ÿ">
    <PathGeometry.Figures>
      <PathFigureCollection>
        <PathFigure StartPoint="0 2" IsClosed="True" IsFilled="True">
          <PathFigure.Segments>
            <PathSegmentCollection>
              <LineSegment Point="0 4.8" />
              <LineSegment Point="2.5 7.4" />
              <LineSegment Point="7.1 2.8" />
              <LineSegment Point="7.1 0" />
              <LineSegment Point="2.5 4.6" />
            </PathSegmentCollection>
          </PathFigure.Segments>
        </PathFigure>
      </PathFigureCollection>
    </PathGeometry.Figures>
  </PathGeometry>
  <Style x:Key="Ā" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
    <Setter Property="ButtonBase.ClickMode" Value="Hover" />
    <Setter Property="FrameworkElement.MinWidth" Value="0" />
    <Setter Property="FrameworkElement.MinHeight" Value="0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <DockPanel Background="#00FFFFFF" SnapsToDevicePixels="True">
            <Rectangle Name="R1" DockPanel.Dock="Right" Width="1" Fill="#00FFFFFF" />
            <Rectangle Name="B1" DockPanel.Dock="Bottom" Height="1" Fill="#00FFFFFF" />
            <Rectangle Name="L1" DockPanel.Dock="Left" Width="1" Fill="#00FFFFFF" />
            <Rectangle Name="T1" DockPanel.Dock="Top" Height="1" Fill="#00FFFFFF" />
            <ContentPresenter Name="ContentContainer" Margin="2,2,2,2" VerticalAlignment="Center" HorizontalAlignment="Center" />
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="R1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Property="Shape.Fill" />
              <Setter TargetName="B1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Property="Shape.Fill" />
              <Setter TargetName="L1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Property="Shape.Fill" />
              <Setter TargetName="T1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Property="Shape.Fill" />
              <Setter TargetName="ContentContainer" Property="FrameworkElement.Margin" Value="3,3,1,1" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border Grid.Row="1" Grid.Column="0">
              <ScrollContentPresenter Margin="{TemplateBinding Control.Padding}" />
            </Border>
            <RepeatButton Style="{StaticResource Ā}" Grid.Row="0" Grid.Column="0" Command="{x:Static ScrollBar.LineUpCommand}" Focusable="False" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <UIElement.Visibility>
                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource ü}" ConverterParameter="0">
                  <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                </MultiBinding>
              </UIElement.Visibility>
              <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Data="{StaticResource ý}" />
            </RepeatButton>
            <RepeatButton Style="{StaticResource Ā}" Grid.Row="2" Grid.Column="0" Command="{x:Static ScrollBar.LineDownCommand}" Focusable="False" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <UIElement.Visibility>
                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource ü}" ConverterParameter="100">
                  <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                </MultiBinding>
              </UIElement.Visibility>
              <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Data="{StaticResource Ë}" />
            </RepeatButton>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
    <Setter Property="FrameworkElement.MinHeight" Value="1" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=SubmenuContent}" TargetType="{x:Type ContentControl}">
    <Border Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
      <ContentPresenter />
    </Border>
  </ControlTemplate>
  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
    <Border Name="Bd" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
      <DockPanel>
        <ContentPresenter Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        <Path Name="GlyphPanel" Margin="4,0,6,0" Visibility="Collapsed" VerticalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight" Data="{StaticResource ÿ}" />
        <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
      </DockPanel>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="True">
        <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
        <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
    <Border Name="Bd" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
      <DockPanel>
        <ContentPresenter Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        <Path Name="GlyphPanel" Margin="4,0,6,0" Visibility="Collapsed" VerticalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight" Data="{StaticResource ÿ}" />
        <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        <Popup Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}">
          <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">
            <Border Name="SubMenuBorder" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}">
              <ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}}">
                <ItemsPresenter Margin="2" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Grid.IsSharedSizeScope="True" />
              </ScrollViewer>
            </Border>
          </theme:SystemDropShadowChrome>
        </Popup>
      </DockPanel>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
        <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
      </Trigger>
      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="True">
        <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
        <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
      </Trigger>
      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
        <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
        <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
    <Border Name="Bd" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
          <ColumnDefinition Width="14" />
        </Grid.ColumnDefinitions>
        <ContentPresenter Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        <Path Name="GlyphPanel" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight" Data="{StaticResource ÿ}" />
        <ContentPresenter Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        <TextBlock Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding MenuItem.InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right" />
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="True">
        <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
        <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
    <Border Name="Bd" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
          <ColumnDefinition Width="14" />
        </Grid.ColumnDefinitions>
        <ContentPresenter Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        <Path Name="GlyphPanel" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight" Data="{StaticResource ÿ}" />
        <ContentPresenter Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        <Path Grid.Column="3" DockPanel.Dock="Right" VerticalAlignment="Center" Margin="4,0,6,0" Fill="{TemplateBinding Control.Foreground}" Data="{StaticResource þ}" />
        <Popup Name="PART_Popup" AllowsTransparency="True" Placement="Right" VerticalOffset="-3" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}">
          <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">
            <Border Name="SubMenuBorder" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}">
              <ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}}">
                <ItemsPresenter Margin="2" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Grid.IsSharedSizeScope="True" />
              </ScrollViewer>
            </Border>
          </theme:SystemDropShadowChrome>
        </Popup>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
        <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
      </Trigger>
      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
        <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
        <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="True">
        <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
        <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
    <Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
    <Setter Property="Control.Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=SubmenuItemTemplateKey}}" />
    <Style.Triggers>
      <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
        <Setter Property="FrameworkElement.Margin" Value="0,1,0,1" />
        <Setter Property="Control.Padding" Value="6,3,6,3" />
        <Setter Property="Control.Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=TopLevelHeaderTemplateKey}}" />
      </Trigger>
      <Trigger Property="MenuItem.Role" Value="TopLevelItem">
        <Setter Property="FrameworkElement.Margin" Value="0,1,0,1" />
        <Setter Property="Control.Padding" Value="6,3,6,3" />
        <Setter Property="Control.Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=TopLevelItemTemplateKey}}" />
      </Trigger>
      <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
        <Setter Property="DockPanel.Dock" Value="Top" />
        <Setter Property="Control.Padding" Value="0,2,0,2" />
        <Setter Property="Control.Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem},ResourceId=SubmenuHeaderTemplateKey}}" />
      </Trigger>
      <Trigger Property="MenuItem.Role" Value="SubmenuItem">
        <Setter Property="DockPanel.Dock" Value="Top" />
        <Setter Property="Control.Padding" Value="0,2,0,2" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <JournalEntryUnifiedViewConverter x:Key="ê" />
  <LinearGradientBrush x:Key="ā" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFFFFF" Offset="0.0" />
        <GradientStop Color="#CCD4E9" Offset="0.1" />
        <GradientStop Color="#4881D2" Offset="0.47" />
        <GradientStop Color="#001A5A" Offset="0.47" />
        <GradientStop Color="#007BD6" Offset="0.70" />
        <GradientStop Color="#54DAFF" Offset="0.85" />
        <GradientStop Color="#86FFFF" Offset="0.95" />
        <GradientStop Color="#FFFFFF" Offset="1.0" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ă" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFFFFF" Offset="0.0" />
        <GradientStop Color="#DFEDF9" Offset="0.1" />
        <GradientStop Color="#3086E1" Offset="0.47" />
        <GradientStop Color="#003B91" Offset="0.47" />
        <GradientStop Color="#1793EF" Offset="0.70" />
        <GradientStop Color="#5AD4FF" Offset="0.85" />
        <GradientStop Color="#BDFFFF" Offset="0.95" />
        <GradientStop Color="#FFFFFF" Offset="1.0" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ă" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#C0D2F5" Offset="0.0" />
        <GradientStop Color="#5E7A9C" Offset="0.47" />
        <GradientStop Color="#00062D" Offset="0.47" />
        <GradientStop Color="#005F9F" Offset="0.70" />
        <GradientStop Color="#1FA4E2" Offset="0.85" />
        <GradientStop Color="#61DAFF" Offset="0.95" />
        <GradientStop Color="#48CFFF" Offset="1.0" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ą" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFFFFF" Offset="0" />
        <GradientStop Color="#EBEEF5" Offset="0.5" />
        <GradientStop Color="#D8DDEB" Offset="0.5" />
        <GradientStop Color="#DFE2F0" Offset="1.0" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ą" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#6C90C4" Offset="0" />
        <GradientStop Color="#315BB4" Offset="0.5" />
        <GradientStop Color="#002091" Offset="0.5" />
        <GradientStop Color="#08377C" Offset="1" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ć" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#8AB1FB" Offset="0" />
      <GradientStop Color="#002874" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ć" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFFFFF" Offset="0.5" />
        <GradientStop Color="#EEEEEE" Offset="0.5" />
        <GradientStop Color="#B0B0B0" Offset="1" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ĉ" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#33B5DA" Offset="0" />
        <GradientStop Color="#335799" Offset="1" />
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="æ" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF" Offset="0" />
      <GradientStop Color="#E3E8F4" Offset="0.5" />
      <GradientStop Color="#CFD7EB" Offset="0.5" />
      <GradientStop Color="#E9ECFA" Offset="1.0" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ĉ" Color="{StaticResource {x:Static SystemColors.HighlightColorKey}}" Opacity="0.25" />
  <Style x:Key="é" TargetType="{x:Type MenuItem}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="HeaderedItemsControl.Header" Value="{Binding Path=(JournalEntry.Name)}" />
    <Setter Property="MenuItem.Command" Value="NavigationCommands.NavigateJournal" />
    <Setter Property="MenuItem.CommandTarget" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Menu}},Path=TemplatedParent}" />
    <Setter Property="MenuItem.CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}" />
    <Setter Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="{Binding (JournalEntryUnifiedViewConverter.JournalEntryPosition)}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Grid Name="Panel" Background="#00FFFFFF" SnapsToDevicePixels="True">
            <Path Name="Glyph" SnapsToDevicePixels="False" Margin="7,5" Width="10" Height="10" HorizontalAlignment="Left" StrokeStartLineCap="Triangle" StrokeEndLineCap="Triangle" StrokeThickness="2" Stroke="{TemplateBinding Control.Foreground}" />
            <ContentPresenter ContentSource="Header" Margin="24,5,21,5" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Current">
              <Setter TargetName="Panel" Value="{StaticResource ĉ}" Property="Panel.Background" />
              <Setter TargetName="Glyph" Property="Path.Data" Value="M0,5L2.5,8 7,3" />
              <Setter TargetName="Glyph" Property="FrameworkElement.FlowDirection" Value="LeftToRight" />
              <Setter TargetName="Glyph" Property="Shape.StrokeLineJoin" Value="Miter" />
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
              <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
              <Setter TargetName="Panel" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Panel.Background" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="MenuItem.IsHighlighted" Value="True" />
                <Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Forward" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Glyph" Property="Shape.Stroke" Value="#FFFFFFFF" />
              <Setter TargetName="Glyph" Property="Path.Data" Value="M1,5L7,5 M5,1L9,5 5,9" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="MenuItem.IsHighlighted" Value="True" />
                <Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Back" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Glyph" Property="Shape.Stroke" Value="#FFFFFFFF" />
              <Setter TargetName="Glyph" Property="Path.Data" Value="M9,5L3,5 M5,1L1,5 5,9" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="è" TargetType="{x:Type MenuItem}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Grid>
            <Popup Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" VerticalOffset="2" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" IsOpen="{Binding Path=(MenuItem.IsSubmenuOpen),RelativeSource={RelativeSource TemplatedParent}}">
              <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">
                <Border Name="SubMenuBorder" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
                  <ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}}">
                    <ItemsPresenter Margin="2" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" />
                  </ScrollViewer>
                </Border>
              </theme:SystemDropShadowChrome>
            </Popup>
            <Grid Name="Panel" Width="26" Background="#00FFFFFF" HorizontalAlignment="Right">
              <Border Name="HighlightBorder" SnapsToDevicePixels="True" Visibility="Hidden" BorderThickness="1,1,1,1" BorderBrush="#B0B5BACE" CornerRadius="2">
                <Border.Background>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStop Color="#20DDDDDD" Offset="0" />
                      <GradientStop Color="#80FFFFFF" Offset="1" />
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Border.Background>
                <Border BorderBrush="#A0FFFFFF" CornerRadius="1.5" BorderThickness="1" />
              </Border>
              <Path Name="Arrow" SnapsToDevicePixels="False" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="{TemplateBinding Control.Padding}" Fill="{StaticResource Ĉ}" Stroke="#FFFFFFFF" StrokeThickness="1" StrokeLineJoin="Round" Data="M0,0L4.5,5 9,0z" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
              <Setter TargetName="HighlightBorder" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#FFA5AABE" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="True" />
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ç" TargetType="{x:Type Menu}">
    <Setter Property="ItemsControl.ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <DockPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="Menu.IsMainMenu" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <ItemsPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ë" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="ButtonBase.Command" Value="NavigationCommands.BrowseBack" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid Width="24" Height="24" Background="#00FFFFFF">
            <Ellipse Name="Circle" StrokeThickness="1" Fill="{StaticResource ā}" Stroke="{StaticResource ą}" />
            <Path Name="Arrow" VerticalAlignment="Center" HorizontalAlignment="Center" StrokeThickness="0.75" Data="M0.37,7.69L5.74,14.2A1.5,1.5,0,1,0,10.26,12.27L8.42,10.42 14.9,10.39A1.5,1.5,0,1,0,14.92,5.87L8.44,5.9 10.31,4.03A1.5,1.5,0,1,0,5.79,1.77z" Stroke="{StaticResource Ć}" Fill="{StaticResource ć}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource Ą}" TargetName="Circle" Property="Shape.Fill" />
              <Setter TargetName="Circle" Property="Shape.Stroke" Value="#FFB5BACE" />
              <Setter TargetName="Arrow" Property="Shape.Stroke" Value="#B0B5BACE" />
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#D0FFFFFF" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter Value="{StaticResource Ă}" TargetName="Circle" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{StaticResource ă}" TargetName="Circle" Property="Shape.Fill" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ì" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="ButtonBase.Command" Value="NavigationCommands.BrowseForward" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid Width="24" Height="24" Background="#00FFFFFF">
            <Ellipse Name="Circle" Grid.Column="0" StrokeThickness="1" Fill="{StaticResource ā}" Stroke="{StaticResource ą}" />
            <Path Name="Arrow" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" StrokeThickness="0.75" Data="M0.37,7.69L5.74,14.2A1.5,1.5,0,1,0,10.26,12.27L8.42,10.42 14.9,10.39A1.5,1.5,0,1,0,14.92,5.87L8.44,5.9 10.31,4.03A1.5,1.5,0,1,0,5.79,1.77z" Stroke="{StaticResource Ć}" Fill="{StaticResource ć}" RenderTransformOrigin="0.5,0">
              <UIElement.RenderTransform>
                <ScaleTransform ScaleX="-1" />
              </UIElement.RenderTransform>
            </Path>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource Ą}" TargetName="Circle" Property="Shape.Fill" />
              <Setter TargetName="Circle" Property="Shape.Stroke" Value="#FFB5BACE" />
              <Setter TargetName="Arrow" Property="Shape.Stroke" Value="#B0B5BACE" />
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#D0FFFFFF" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter Value="{StaticResource Ă}" TargetName="Circle" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{StaticResource ă}" TargetName="Circle" Property="Shape.Fill" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="Ċ" TargetType="{x:Type NavigationWindow}">
    <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
      <DockPanel>
        <Grid Name="NavChrome" Background="{StaticResource æ}" DockPanel.Dock="Top" Height="30">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="29" />
            <ColumnDefinition Width="26" />
            <ColumnDefinition Width="17" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>
          <Menu Name="NavMenu" Grid.ColumnSpan="3" Height="23" Margin="1,0,0,1" VerticalAlignment="Center" Style="{StaticResource ç}">
            <MenuItem Padding="0,2,5,0" Style="{StaticResource è}" ItemContainerStyle="{StaticResource é}" IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen),Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
              <ItemsControl.ItemsSource>
                <MultiBinding Converter="{StaticResource ê}">
                  <MultiBinding.Bindings>
                    <Binding Path="(NavigationWindow.BackStack)" RelativeSource="{RelativeSource TemplatedParent}" />
                    <Binding Path="(NavigationWindow.ForwardStack)" RelativeSource="{RelativeSource TemplatedParent}" />
                  </MultiBinding.Bindings>
                </MultiBinding>
              </ItemsControl.ItemsSource>
            </MenuItem>
          </Menu>
          <Path Grid.Column="0" SnapsToDevicePixels="False" IsHitTestVisible="False" Margin="2,0,0,0" Grid.ColumnSpan="3" StrokeThickness="1" HorizontalAlignment="Left" VerticalAlignment="Center" Data="M22.5767,21.035Q27,19.37,31.424,21.035A12.5,12.5,0,0,0,53.5,13A12.5,12.5,0,0,0,37.765,0.926Q27,4.93,16.235,0.926A12.5,12.5,0,0,0,0.5,13A12.5,12.5,0,0,0,22.5767,21.035z">
            <Shape.Fill>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="#A0C2CCE7" Offset="0" />
                    <GradientStop Color="#60FFFFFF" Offset="1" />
                  </GradientStopCollection>
                </GradientBrush.GradientStops>
              </LinearGradientBrush>
            </Shape.Fill>
            <Shape.Stroke>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="#FFB7C2E3" Offset="0.2" />
                    <GradientStop Color="#A0FFFFFF" Offset="0.9" />
                  </GradientStopCollection>
                </GradientBrush.GradientStops>
              </LinearGradientBrush>
            </Shape.Stroke>
          </Path>
          <Button Style="{StaticResource ë}" Margin="3,0,2,0" Grid.Column="0" />
          <Button Style="{StaticResource ì}" Margin="2,0,0,0" Grid.Column="1" />
        </Grid>
        <Grid>
          <AdornerDecorator>
            <ContentPresenter Name="PART_NavWinCP" ClipToBounds="True" />
          </AdornerDecorator>
          <ResizeGrip Name="WindowResizeGrip" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed" IsTabStop="False" />
        </Grid>
      </DockPanel>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="NavigationWindow.ShowsNavigationUI" Value="False">
        <Setter TargetName="NavChrome" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Window.ResizeMode" Value="CanResizeWithGrip" />
          <Condition Property="Window.WindowState" Value="Normal" />
        </MultiTrigger.Conditions>
        <Setter TargetName="WindowResizeGrip" Property="UIElement.Visibility" Value="Visible" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="NavigationWindow.CanGoForward" Value="False" />
          <Condition Property="NavigationWindow.CanGoBack" Value="False" />
        </MultiTrigger.Conditions>
        <Setter TargetName="NavMenu" Property="UIElement.IsEnabled" Value="False" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type NavigationWindow}" TargetType="{x:Type NavigationWindow}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.Template" Value="{StaticResource Ċ}" />
  </Style>
  <Style x:Key="{x:Type Page}" TargetType="{x:Type Page}">
    <Setter Property="Page.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Page}">
          <Border Background="{TemplateBinding Page.Background}">
            <ContentPresenter Content="{TemplateBinding Page.Content}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ċ" EndPoint="0,1" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#ABEDAC" Offset="0" />
      <GradientStop Color="#2ED331" Offset="0.5" />
      <GradientStop Color="#8EE790" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Type ProgressBar}" TargetType="{x:Type ProgressBar}">
    <Setter Property="Control.Foreground" Value="{StaticResource ċ}" />
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ProgressBar}">
          <Border Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="3" SnapsToDevicePixels="True">
            <Border BorderThickness="1,1,1,0" BorderBrush="#FFBEBEBE" CornerRadius="2">
              <Border BorderThickness="1" BorderBrush="#FFEFEFEF" CornerRadius="1">
                <DockPanel Name="PART_Track" Margin="1,0,0,1" LastChildFill="False">
                  <Rectangle Name="PART_Indicator">
                    <Shape.Fill>
                      <MultiBinding>
                        <MultiBinding.Converter>
                          <theme:ProgressBarBrushConverter />
                        </MultiBinding.Converter>
                        <Binding Path="Foreground" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Path="IsIndeterminate" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Path="ActualWidth" ElementName="PART_Indicator" />
                        <Binding Path="ActualHeight" ElementName="PART_Indicator" />
                        <Binding Path="ActualWidth" ElementName="PART_Track" />
                      </MultiBinding>
                    </Shape.Fill>
                  </Rectangle>
                </DockPanel>
              </Border>
            </Border>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ProgressBar.Orientation" Value="Vertical">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ProgressBar}">
              <Border Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="3" SnapsToDevicePixels="True">
                <Border BorderThickness="1,1,1,0" BorderBrush="#FFBEBEBE" CornerRadius="2">
                  <Border BorderThickness="1" BorderBrush="#FFEFEFEF" CornerRadius="1">
                    <DockPanel Name="PART_Track" Margin="0,0,0,1" LastChildFill="False">
                      <Decorator Name="PART_Indicator" DockPanel.Dock="Bottom">
                        <Rectangle>
                          <FrameworkElement.LayoutTransform>
                            <RotateTransform Angle="-90" />
                          </FrameworkElement.LayoutTransform>
                          <Shape.Fill>
                            <MultiBinding>
                              <MultiBinding.Converter>
                                <theme:ProgressBarBrushConverter />
                              </MultiBinding.Converter>
                              <Binding Path="Foreground" RelativeSource="{RelativeSource TemplatedParent}" />
                              <Binding Path="IsIndeterminate" RelativeSource="{RelativeSource TemplatedParent}" />
                              <Binding Path="ActualHeight" ElementName="PART_Indicator" />
                              <Binding Path="ActualWidth" ElementName="PART_Indicator" />
                              <Binding Path="ActualHeight" ElementName="PART_Track" />
                            </MultiBinding>
                          </Shape.Fill>
                        </Rectangle>
                      </Decorator>
                    </DockPanel>
                  </Border>
                </Border>
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Background" Value="{StaticResource ×}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource Ø}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RadioButton}">
          <BulletDecorator Background="#00FFFFFF">
            <BulletDecorator.Bullet>
              <theme:BulletChrome IsRound="True" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" IsChecked="{TemplateBinding ToggleButton.IsChecked}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" />
            </BulletDecorator.Bullet>
            <ContentPresenter Margin="{TemplateBinding Control.Padding}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" />
          </BulletDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="ContentControl.HasContent" Value="True">
              <Setter Value="{StaticResource Õ}" Property="FrameworkElement.FocusVisualStyle" />
              <Setter Property="Control.Padding" Value="2,0,0,0" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="Č" Color="#B8B4A2" />
  <Style x:Key="{x:Type ResizeGrip}" TargetType="{x:Type ResizeGrip}">
    <Setter Property="FrameworkElement.MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
    <Setter Property="FrameworkElement.MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ResizeGrip}">
          <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Control.Background}">
            <Path HorizontalAlignment="Right" VerticalAlignment="Bottom" Fill="#FFFFFFFF" Margin="0,0,2,2" Data="M8,0L10,0 10,2 8,2z M4,4L6,4 6,6 4,6z M8,4L10,4 10,6 8,6z M0,8L2,8 2,10 0,10z M4,8L6,8 6,10 4,10z M8,8L10,8 10,10 8,10z" />
            <Path HorizontalAlignment="Right" VerticalAlignment="Bottom" Fill="{StaticResource Č}" Margin="0,0,3,3" Data="M8,0L10,0 10,2 8,2z M4,4L6,4 6,6 4,6z M8,4L10,4 10,6 8,6z M0,8L2,8 2,10 0,10z M4,8L6,8 6,10 4,10z M8,8L10,8 10,10 8,10z" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="č" Color="#EEEDE5" />
  <Pen x:Key="Ď" Thickness="1">
    <Pen.Brush>
      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
          <GradientStop Color="#00A0B5D3" Offset="0" />
          <GradientStop Color="#FFA0B5D3" Offset="0.5" />
          <GradientStop Color="#FF7C9FD3" Offset="1" />
        </GradientBrush.GradientStops>
      </LinearGradientBrush>
    </Pen.Brush>
  </Pen>
  <Pen x:Key="ď" Thickness="1">
    <Pen.Brush>
      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
          <GradientStop Color="#00CCCCBA" Offset="0" />
          <GradientStop Color="#FFCCCCBA" Offset="0.5" />
          <GradientStop Color="#FFC4C4AF" Offset="1" />
        </GradientBrush.GradientStops>
      </LinearGradientBrush>
    </Pen.Brush>
  </Pen>
  <LinearGradientBrush x:Key="Đ" StartPoint="0, 0" EndPoint="0, 1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#EEEDE5" Offset="0" />
      <GradientStop Color="#EEEDE5" Offset="0.05" />
      <GradientStop Color="#F3F1EC" Offset="0.06" />
      <GradientStop Color="#FEFEFE" Offset="0.94" />
      <GradientStop Color="#EEEDE5" Offset="0.95" />
      <GradientStop Color="#EEEDE5" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="đ" StartPoint="0, 0" EndPoint="0, 1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#D7D5C2" Offset="0" />
      <GradientStop Color="#D7D5C2" Offset="0.05" />
      <GradientStop Color="#E3DED3" Offset="0.06" />
      <GradientStop Color="#FDFDF6" Offset="0.94" />
      <GradientStop Color="#D7D5C2" Offset="0.95" />
      <GradientStop Color="#D7D5C2" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ē" StartPoint="0, 0" EndPoint="1, 0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#EEEDE5" Offset="0" />
      <GradientStop Color="#EEEDE5" Offset="0.05" />
      <GradientStop Color="#F3F1EC" Offset="0.06" />
      <GradientStop Color="#FEFEFE" Offset="0.94" />
      <GradientStop Color="#EEEDE5" Offset="0.95" />
      <GradientStop Color="#EEEDE5" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ē" StartPoint="0, 0" EndPoint="1, 0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#D7D5C2" Offset="0" />
      <GradientStop Color="#D7D5C2" Offset="0.05" />
      <GradientStop Color="#E3DED3" Offset="0.06" />
      <GradientStop Color="#FDFDF6" Offset="0.94" />
      <GradientStop Color="#D7D5C2" Offset="0.95" />
      <GradientStop Color="#D7D5C2" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="Ĕ" TargetType="{x:Type RepeatButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <theme:ScrollChrome Name="Chrome" ThemeColor="NormalColor" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" ScrollChrome.ScrollGlyph="{TemplateBinding theme:ScrollChrome.ScrollGlyph}" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ĕ" TargetType="{x:Type Thumb}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <theme:ScrollChrome Name="Chrome" ThemeColor="NormalColor" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding Thumb.IsDragging}" ScrollChrome.ScrollGlyph="{TemplateBinding theme:ScrollChrome.ScrollGlyph}" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ė" TargetType="{x:Type RepeatButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Name="Bg" Fill="{TemplateBinding Control.Background}" />
          <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="Bg" Value="{StaticResource đ}" Property="Shape.Fill" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ė" TargetType="{x:Type RepeatButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Name="Bg" Fill="{TemplateBinding Control.Background}" />
          <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="Bg" Value="{StaticResource ē}" Property="Shape.Fill" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.Background" Value="{StaticResource Ē}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="FrameworkElement.Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
    <Setter Property="FrameworkElement.MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
              <RowDefinition Height="0.00001*" />
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
            </Grid.RowDefinitions>
            <RepeatButton Style="{StaticResource Ĕ}" Command="{x:Static ScrollBar.LineUpCommand}" theme:ScrollChrome.ScrollGlyph="UpArrow" />
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
              <Track.DecreaseRepeatButton>
                <RepeatButton Style="{StaticResource ė}" Command="{x:Static ScrollBar.PageUpCommand}" />
              </Track.DecreaseRepeatButton>
              <Track.IncreaseRepeatButton>
                <RepeatButton Style="{StaticResource ė}" Command="{x:Static ScrollBar.PageDownCommand}" />
              </Track.IncreaseRepeatButton>
              <Track.Thumb>
                <Thumb Style="{StaticResource ĕ}" theme:ScrollChrome.ScrollGlyph="VerticalGripper" />
              </Track.Thumb>
            </Track>
            <RepeatButton Style="{StaticResource Ĕ}" Grid.Row="2" Command="{x:Static ScrollBar.LineDownCommand}" theme:ScrollChrome.ScrollGlyph="DownArrow" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
        <Setter Property="FrameworkElement.Width" Value="Auto" />
        <Setter Property="FrameworkElement.MinWidth" Value="0" />
        <Setter Property="Control.Background" Value="{StaticResource Đ}" />
        <Setter Property="FrameworkElement.Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
        <Setter Property="FrameworkElement.MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollBar}">
              <Grid Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                  <ColumnDefinition Width="0.00001*" />
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                </Grid.ColumnDefinitions>
                <RepeatButton Style="{StaticResource Ĕ}" Command="{x:Static ScrollBar.LineLeftCommand}" theme:ScrollChrome.ScrollGlyph="LeftArrow" />
                <Track Name="PART_Track" Grid.Column="1">
                  <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource Ė}" Command="{x:Static ScrollBar.PageLeftCommand}" />
                  </Track.DecreaseRepeatButton>
                  <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource Ė}" Command="{x:Static ScrollBar.PageRightCommand}" />
                  </Track.IncreaseRepeatButton>
                  <Track.Thumb>
                    <Thumb Style="{StaticResource ĕ}" theme:ScrollChrome.ScrollGlyph="HorizontalGripper" />
                  </Track.Thumb>
                </Track>
                <RepeatButton Style="{StaticResource Ĕ}" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" theme:ScrollChrome.ScrollGlyph="RightArrow" />
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}">
    <Style.Triggers>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type Separator}" TargetType="{x:Type Separator}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
    <Setter Property="FrameworkElement.Margin" Value="0,2,0,2" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True" Height="1" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="Ę" Color="#F3F3EF" />
  <SolidColorBrush x:Key="ę" Color="#F3F3EF" />
  <LinearGradientBrush x:Key="Ě" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#40FFFFFF" Offset="0" />
      <GradientStop Color="#00FFFFFF" Offset=".3" />
      <GradientStop Color="#00000000" Offset=".7" />
      <GradientStop Color="#40000000" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ě" StartPoint="1,0" EndPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#40FFFFFF" Offset="0" />
      <GradientStop Color="#00FFFFFF" Offset=".3" />
      <GradientStop Color="#00000000" Offset=".7" />
      <GradientStop Color="#40000000" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ĝ" EndPoint="0,1" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFAEB1AF" Offset="0.1" />
      <GradientStop Color="White" Offset=".9" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Geometry x:Key="ĝ">M 5,-8 A 1.5 1.5 0 0 0 3.5,-9.5 L -3.5,-9.5 A 1.5 1.5 0 0 0 -5,-8 L -5,5.5 L 0,10.5 L 5,5.5 Z</Geometry>
  <Geometry x:Key="Ğ">M 4.5,-6 L 4.5,-9 L -4.5,-9 L -4.5,-6 Z</Geometry>
  <Geometry x:Key="ğ">M 4.5,4 L 0,8.5 L -4.5,4 L -4.5,5 L 0,10 L 4.5,5 Z</Geometry>
  <Geometry x:Key="Ġ">M 5,-9 A 1.5 1.5 0 0 0 3.5,-10.5 L -3.5,-10.5 A 1.5 1.5 0 0 0 -5,-9 L -5,9 A 1.5 1.5 0 0 0 -3.5,10.5 L 3.5,10.5 A 1.5 1.5 0 0 0 5,9 Z</Geometry>
  <Geometry x:Key="ġ">M 4.5,-8 L 4.5,-10 L -4.5,-10 L -4.5,-8 Z</Geometry>
  <Geometry x:Key="Ģ">M 4.5,8 L 4.5,10 L -4.5,10 L -4.5,8 Z</Geometry>
  <LinearGradientBrush x:Key="ģ" StartPoint="0,0" EndPoint="1,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFBECBD3" Offset="0" />
      <GradientStop Color="#FF72838D" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ĥ" StartPoint="0,0" EndPoint="1,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#70D66F" Offset="0" />
      <GradientStop Color="#46CA44" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ĥ" StartPoint="0,0" EndPoint="1,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#46CA44" Offset="0" />
      <GradientStop Color="#1B9B1A" Offset=".8" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ħ" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#40FFFFFF" Offset="1" />
      <GradientStop Color="#00FFFFFF" Offset=".7" />
      <GradientStop Color="#00000000" Offset=".3" />
      <GradientStop Color="#40000000" Offset="0" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ħ" StartPoint="0,0" EndPoint="1,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFBECBD3" Offset="1" />
      <GradientStop Color="#FF72838D" Offset="0" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ĩ" StartPoint="0,0" EndPoint="1,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#46CA44" Offset="1" />
      <GradientStop Color="#1B9B1A" Offset="0" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ĩ" StartPoint="0,0" EndPoint="1,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#70D66F" Offset="1" />
      <GradientStop Color="#46CA44" Offset=".2" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ī" StartPoint="0,0" EndPoint="1,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FBCE7C" Offset="0" />
      <GradientStop Color="#F7B335" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ī" StartPoint="0,0" EndPoint="1,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FAC055" Offset="0" />
      <GradientStop Color="#C7902A" Offset=".8" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ĭ" StartPoint="0,0" EndPoint="1,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FAC055" Offset="1" />
      <GradientStop Color="#C7902A" Offset="0" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ĭ" StartPoint="0,0" EndPoint="1,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FBCE7C" Offset="1" />
      <GradientStop Color="#F7B335" Offset=".2" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Į" StartPoint="0,0" EndPoint="1,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#70BA66" Offset="0" />
      <GradientStop Color="#229412" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="į" StartPoint="0,0" EndPoint="1,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#46A638" Offset="0" />
      <GradientStop Color="#1B770E" Offset=".8" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="İ" StartPoint="0,0" EndPoint="1,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#46A638" Offset="1" />
      <GradientStop Color="#1B770E" Offset="0" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ı" Color="#FFF0EDE0" />
  <Style x:Key="Ĳ" TargetType="{x:Type RepeatButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border Background="#00FFFFFF" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ĳ" TargetType="{x:Type Thumb}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="FrameworkElement.Height" Value="22" />
    <Setter Property="FrameworkElement.Width" Value="11" />
    <Setter Property="Control.Foreground" Value="#FF008000" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <UIElement.RenderTransform>
              <TranslateTransform X="5.5" Y="11" />
            </UIElement.RenderTransform>
            <Path Name="Background" Fill="{StaticResource Ę}" Data="{StaticResource Ġ}" />
            <Path Name="TopAccent" Fill="{StaticResource Ĥ}" StrokeThickness="1" Data="{StaticResource ġ}" />
            <Path Name="BottomAccent" Fill="{StaticResource ĥ}" StrokeThickness="1" Data="{StaticResource Ģ}" />
            <Path Name="OuterBorder" Fill="{StaticResource Ě}" Stroke="{StaticResource ģ}" StrokeThickness="1" Data="{StaticResource Ġ}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="TopAccent" Value="{StaticResource Ī}" Property="Shape.Fill" />
              <Setter TargetName="BottomAccent" Value="{StaticResource ī}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="Control.Foreground" Value="#FFFFA500">
              <Setter TargetName="TopAccent" Value="{StaticResource Ī}" Property="Shape.Fill" />
              <Setter TargetName="BottomAccent" Value="{StaticResource ī}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="TopAccent" Value="{StaticResource Į}" Property="Shape.Fill" />
              <Setter TargetName="BottomAccent" Value="{StaticResource į}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF5F4EA" />
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFD6D4C6" />
              <Setter TargetName="TopAccent" Property="Shape.Fill" Value="#FFD2D0C6" />
              <Setter TargetName="BottomAccent" Property="Shape.Fill" Value="#FFBCBAAE" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ĵ" TargetType="{x:Type Thumb}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="FrameworkElement.Height" Value="22" />
    <Setter Property="FrameworkElement.Width" Value="11" />
    <Setter Property="Control.Foreground" Value="#FF008000" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <UIElement.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform Angle="180" />
                    <TranslateTransform X="5.5" Y="11" />
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </UIElement.RenderTransform>
            <Path Name="Background" Fill="{StaticResource ę}" Data="{StaticResource ĝ}" />
            <Path Name="TopAccent" Fill="{StaticResource Ĩ}" StrokeThickness="1" Data="{StaticResource Ğ}" />
            <Path Name="BottomAccent" Fill="{StaticResource ĩ}" StrokeThickness="1" Data="{StaticResource ğ}" />
            <Path Name="OuterBorder" Fill="{StaticResource Ħ}" Stroke="{StaticResource ħ}" StrokeThickness="1" Data="{StaticResource ĝ}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="TopAccent" Value="{StaticResource Ĭ}" Property="Shape.Fill" />
              <Setter TargetName="BottomAccent" Value="{StaticResource ĭ}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="Control.Foreground" Value="#FFFFA500">
              <Setter TargetName="TopAccent" Value="{StaticResource Ĭ}" Property="Shape.Fill" />
              <Setter TargetName="BottomAccent" Value="{StaticResource ĭ}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="TopAccent" Value="{StaticResource İ}" Property="Shape.Fill" />
              <Setter TargetName="BottomAccent" Value="{StaticResource İ}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF5F4EA" />
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFD6D4C6" />
              <Setter TargetName="TopAccent" Property="Shape.Fill" Value="#FFBBB9AD" />
              <Setter TargetName="BottomAccent" Property="Shape.Fill" Value="#00FFFFFF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ĵ" TargetType="{x:Type Thumb}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="FrameworkElement.Height" Value="22" />
    <Setter Property="FrameworkElement.Width" Value="11" />
    <Setter Property="Control.Foreground" Value="#FF008000" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <UIElement.RenderTransform>
              <TranslateTransform X="5.5" Y="11" />
            </UIElement.RenderTransform>
            <Path Name="Background" Fill="{StaticResource Ę}" Data="{StaticResource ĝ}" />
            <Path Name="TopAccent" Fill="{StaticResource Ĥ}" StrokeThickness="1" Data="{StaticResource Ğ}" />
            <Path Name="BottomAccent" Fill="{StaticResource ĥ}" StrokeThickness="1" Data="{StaticResource ğ}" />
            <Path Name="OuterBorder" Fill="{StaticResource Ě}" Stroke="{StaticResource ģ}" StrokeThickness="1" Data="{StaticResource ĝ}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="TopAccent" Value="{StaticResource Ī}" Property="Shape.Fill" />
              <Setter TargetName="BottomAccent" Value="{StaticResource ī}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="Control.Foreground" Value="#FFFFA500">
              <Setter TargetName="TopAccent" Value="{StaticResource Ī}" Property="Shape.Fill" />
              <Setter TargetName="BottomAccent" Value="{StaticResource ī}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="TopAccent" Value="{StaticResource Į}" Property="Shape.Fill" />
              <Setter TargetName="BottomAccent" Value="{StaticResource į}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF5F4EA" />
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFD6D4C6" />
              <Setter TargetName="TopAccent" Property="Shape.Fill" Value="#FFD2D0C6" />
              <Setter TargetName="BottomAccent" Property="Shape.Fill" Value="#00FFFFFF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="Ķ" StartPoint="1,0" EndPoint="0,.5">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFBECBD3" Offset="0" />
      <GradientStop Color="#FF72838D" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ķ" StartPoint="1,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#70D66F" Offset="0" />
      <GradientStop Color="#46CA44" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ĸ" StartPoint="1,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#46CA44" Offset="0" />
      <GradientStop Color="#1B9B1A" Offset=".8" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ĺ" StartPoint="1,0" EndPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#40FFFFFF" Offset="1" />
      <GradientStop Color="#00FFFFFF" Offset=".7" />
      <GradientStop Color="#00000000" Offset=".3" />
      <GradientStop Color="#40000000" Offset="0" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ĺ" StartPoint="1,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFBECBD3" Offset="1" />
      <GradientStop Color="#FF72838D" Offset="0" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ļ" StartPoint="1,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#46CA44" Offset="1" />
      <GradientStop Color="#1B9B1A" Offset="0" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ļ" StartPoint="1,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#70D66F" Offset="1" />
      <GradientStop Color="#46CA44" Offset=".2" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ľ" StartPoint="1,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FBCE7C" Offset="0" />
      <GradientStop Color="#F7B335" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ľ" StartPoint="1,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FAC055" Offset="0" />
      <GradientStop Color="#C7902A" Offset=".8" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ŀ" StartPoint="1,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FAC055" Offset="1" />
      <GradientStop Color="#C7902A" Offset="0" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ŀ" StartPoint="1,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FBCE7C" Offset="1" />
      <GradientStop Color="#F7B335" Offset=".2" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ł" StartPoint="1,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#70BA66" Offset="0" />
      <GradientStop Color="#229412" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ł" StartPoint="1,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#46A638" Offset="0" />
      <GradientStop Color="#1B770E" Offset=".8" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ń" StartPoint="1,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#46A638" Offset="1" />
      <GradientStop Color="#1B770E" Offset="0" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ń" Color="#FFF0EDE0" />
  <LinearGradientBrush x:Key="Ņ" EndPoint="1,0" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFAEB1AF" Offset="0.1" />
      <GradientStop Color="White" Offset=".9" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="ņ" TargetType="{x:Type Thumb}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="FrameworkElement.Width" Value="22" />
    <Setter Property="FrameworkElement.Height" Value="11" />
    <Setter Property="Control.Foreground" Value="#FF008000" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <UIElement.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform Angle="-90" />
                    <TranslateTransform X="11" Y="5.5" />
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </UIElement.RenderTransform>
            <Path Name="Background" Fill="{StaticResource ę}" Data="{StaticResource Ġ}" />
            <Path Name="TopAccent" Fill="{StaticResource ķ}" StrokeThickness="1" Data="{StaticResource ġ}" />
            <Path Name="BottomAccent" Fill="{StaticResource ĸ}" StrokeThickness="1" Data="{StaticResource Ģ}" />
            <Path Name="OuterBorder" Fill="{StaticResource ě}" Stroke="{StaticResource Ķ}" StrokeThickness="1" Data="{StaticResource Ġ}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="TopAccent" Value="{StaticResource Ľ}" Property="Shape.Fill" />
              <Setter TargetName="BottomAccent" Value="{StaticResource ľ}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="Control.Foreground" Value="#FFFFA500">
              <Setter TargetName="TopAccent" Value="{StaticResource Ľ}" Property="Shape.Fill" />
              <Setter TargetName="BottomAccent" Value="{StaticResource ľ}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="TopAccent" Value="{StaticResource Ł}" Property="Shape.Fill" />
              <Setter TargetName="BottomAccent" Value="{StaticResource ł}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF5F4EA" />
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFD6D4C6" />
              <Setter TargetName="TopAccent" Property="Shape.Fill" Value="#FFD2D0C6" />
              <Setter TargetName="BottomAccent" Property="Shape.Fill" Value="#FFD8D5CB" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ň" TargetType="{x:Type Thumb}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="FrameworkElement.Width" Value="22" />
    <Setter Property="FrameworkElement.Height" Value="11" />
    <Setter Property="Control.Foreground" Value="#FF008000" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <UIElement.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform Angle="90" />
                    <TranslateTransform X="11" Y="5.5" />
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </UIElement.RenderTransform>
            <Path Name="Background" Fill="{StaticResource Ę}" Data="{StaticResource ĝ}" />
            <Path Name="TopAccent" Fill="{StaticResource Ļ}" StrokeThickness="1" Data="{StaticResource Ğ}" />
            <Path Name="BottomAccent" Fill="{StaticResource ļ}" StrokeThickness="1" Data="{StaticResource ğ}" />
            <Path Name="OuterBorder" Fill="{StaticResource Ĺ}" Stroke="{StaticResource ĺ}" StrokeThickness="1" Data="{StaticResource ĝ}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="TopAccent" Value="{StaticResource Ŀ}" Property="Shape.Fill" />
              <Setter TargetName="BottomAccent" Value="{StaticResource ŀ}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="Control.Foreground" Value="#FFFFA500">
              <Setter TargetName="TopAccent" Value="{StaticResource Ŀ}" Property="Shape.Fill" />
              <Setter TargetName="BottomAccent" Value="{StaticResource ŀ}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="TopAccent" Value="{StaticResource Ń}" Property="Shape.Fill" />
              <Setter TargetName="BottomAccent" Value="{StaticResource Ń}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF5F4EA" />
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFD6D4C6" />
              <Setter TargetName="TopAccent" Property="Shape.Fill" Value="#FFBBB9AD" />
              <Setter TargetName="BottomAccent" Property="Shape.Fill" Value="#00FFFFFF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ň" TargetType="{x:Type Thumb}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="FrameworkElement.Width" Value="22" />
    <Setter Property="FrameworkElement.Height" Value="11" />
    <Setter Property="Control.Foreground" Value="#FF008000" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <UIElement.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform Angle="-90" />
                    <TranslateTransform X="11" Y="5.5" />
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </UIElement.RenderTransform>
            <Path Name="Background" Fill="{StaticResource ę}" Data="{StaticResource ĝ}" />
            <Path Name="TopAccent" Fill="{StaticResource ķ}" StrokeThickness="1" Data="{StaticResource Ğ}" />
            <Path Name="BottomAccent" Fill="{StaticResource ĸ}" StrokeThickness="1" Data="{StaticResource ğ}" />
            <Path Name="OuterBorder" Fill="{StaticResource ě}" Stroke="{StaticResource Ķ}" StrokeThickness="1" Data="{StaticResource ĝ}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="TopAccent" Value="{StaticResource Ľ}" Property="Shape.Fill" />
              <Setter TargetName="BottomAccent" Value="{StaticResource ľ}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="Control.Foreground" Value="#FFFFA500">
              <Setter TargetName="TopAccent" Value="{StaticResource Ľ}" Property="Shape.Fill" />
              <Setter TargetName="BottomAccent" Value="{StaticResource ľ}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="TopAccent" Value="{StaticResource Ł}" Property="Shape.Fill" />
              <Setter TargetName="BottomAccent" Value="{StaticResource ł}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF5F4EA" />
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFD6D4C6" />
              <Setter TargetName="TopAccent" Property="Shape.Fill" Value="#FFD2D0C6" />
              <Setter TargetName="BottomAccent" Property="Shape.Fill" Value="#00FFFFFF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Slider}" TargetType="{x:Type Slider}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.Foreground" Value="#FFA1A192" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Slider}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding FrameworkElement.MinHeight}" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <TickBar Name="TopTick" Grid.Row="0" Visibility="Collapsed" Placement="Top" Fill="{TemplateBinding Control.Foreground}" Height="4" />
              <TickBar Name="BottomTick" Grid.Row="2" Visibility="Collapsed" Placement="Bottom" Fill="{TemplateBinding Control.Foreground}" Height="4" />
              <Border Grid.Row="1" Margin="5,0" VerticalAlignment="center" BorderBrush="{StaticResource Ĝ}" BorderThickness="1" CornerRadius="1" Background="{StaticResource ı}" Height="4.0">
                <Canvas Margin="-6,-1">
                  <Rectangle Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden" StrokeThickness="1.0" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                </Canvas>
              </Border>
              <Track Name="PART_Track" Grid.Row="1">
                <Track.DecreaseRepeatButton>
                  <RepeatButton Style="{StaticResource Ĳ}" Command="{x:Static Slider.DecreaseLarge}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                  <RepeatButton Style="{StaticResource Ĳ}" Command="{x:Static Slider.IncreaseLarge}" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                  <Thumb Name="Thumb" Style="{StaticResource ĳ}" />
                </Track.Thumb>
              </Track>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Slider.TickPlacement" Value="TopLeft">
              <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="Thumb" Value="{StaticResource Ĵ}" Property="FrameworkElement.Style" />
            </Trigger>
            <Trigger Property="Slider.TickPlacement" Value="BottomRight">
              <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="Thumb" Value="{StaticResource ĵ}" Property="FrameworkElement.Style" />
            </Trigger>
            <Trigger Property="Slider.TickPlacement" Value="Both">
              <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="Slider.IsSelectionRangeEnabled" Value="True">
              <Setter TargetName="PART_SelectionRange" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
              <Setter TargetName="Thumb" Property="Control.Foreground" Value="#FFFFA500" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Slider.Orientation" Value="Vertical">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Slider}">
              <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding FrameworkElement.MinWidth}" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <TickBar Name="LeftTick" Grid.Column="0" Visibility="Collapsed" Placement="Left" Fill="{TemplateBinding Control.Foreground}" Width="4" />
                  <TickBar Name="RightTick" Grid.Column="2" Visibility="Collapsed" Placement="Right" Fill="{TemplateBinding Control.Foreground}" Width="4" />
                  <Border Grid.Column="1" Margin="0,5" HorizontalAlignment="center" BorderBrush="{StaticResource Ņ}" BorderThickness="1" CornerRadius="1" Background="{StaticResource ń}" Width="4.0">
                    <Canvas Margin="-1,-6">
                      <Rectangle Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Width="4.0" Visibility="Hidden" StrokeThickness="1.0" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                    </Canvas>
                  </Border>
                  <Track Name="PART_Track" Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                      <RepeatButton Style="{StaticResource Ĳ}" Command="{x:Static Slider.DecreaseLarge}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                      <RepeatButton Style="{StaticResource Ĳ}" Command="{x:Static Slider.IncreaseLarge}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                      <Thumb Name="Thumb" Style="{StaticResource ņ}" />
                    </Track.Thumb>
                  </Track>
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="Slider.TickPlacement" Value="TopLeft">
                  <Setter TargetName="LeftTick" Property="UIElement.Visibility" Value="Visible" />
                  <Setter TargetName="Thumb" Value="{StaticResource Ň}" Property="FrameworkElement.Style" />
                </Trigger>
                <Trigger Property="Slider.TickPlacement" Value="BottomRight">
                  <Setter TargetName="RightTick" Property="UIElement.Visibility" Value="Visible" />
                  <Setter TargetName="Thumb" Value="{StaticResource ň}" Property="FrameworkElement.Style" />
                </Trigger>
                <Trigger Property="Slider.TickPlacement" Value="Both">
                  <Setter TargetName="LeftTick" Property="UIElement.Visibility" Value="Visible" />
                  <Setter TargetName="RightTick" Property="UIElement.Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="Slider.IsSelectionRangeEnabled" Value="True">
                  <Setter TargetName="PART_SelectionRange" Property="UIElement.Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                  <Setter TargetName="Thumb" Property="Control.Foreground" Value="#FFFFA500" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type StatusBar}" TargetType="{x:Type StatusBar}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}" />
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}" />
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type StatusBar}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
    <Setter Property="FrameworkElement.MinWidth" Value="1" />
    <Setter Property="FrameworkElement.MinHeight" Value="1" />
    <Setter Property="FrameworkElement.Margin" Value="2" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type StatusBarItem}" TargetType="{x:Type StatusBarItem}">
    <Setter Property="Control.Padding" Value="3" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type StatusBarItem}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ŉ" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFCFCFE" Offset="0" />
      <GradientStop Color="#FFF4F3EE" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ŋ" StartPoint="0,1" EndPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFCFCFE" Offset="0" />
      <GradientStop Color="#FFF4F3EE" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ŋ" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFCFCFE" Offset="0" />
      <GradientStop Color="#FFF4F3EE" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ō" StartPoint="1,0" EndPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFCFCFE" Offset="0" />
      <GradientStop Color="#FFF4F3EE" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ō" Color="#919B9C" />
  <Style x:Key="{x:Type TabControl}" TargetType="{x:Type TabControl}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Padding" Value="4,4,4,4" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource ō}" />
    <Setter Property="Control.Background" Value="{StaticResource ŉ}" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabControl}">
          <Grid KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="True" ClipToBounds="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Name="ColumnDefinition0" />
              <ColumnDefinition Name="ColumnDefinition1" Width="0" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Name="RowDefinition0" Height="Auto" />
              <RowDefinition Name="RowDefinition1" Height="*" />
            </Grid.RowDefinitions>
            <TabPanel Name="HeaderPanel" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" Grid.Column="0" Grid.Row="0" Margin="2,2,2,0" IsItemsHost="True" />
            <Border Name="ContentPanel" BorderThickness="0,0,1,1" BorderBrush="#FFD0CEBF" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" Grid.Column="0" Grid.Row="1">
              <Border BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}">
                <Border Background="{TemplateBinding Control.Background}">
                  <ContentPresenter Name="PART_SelectedContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Margin="{TemplateBinding Control.Padding}" ContentSource="SelectedContent" />
                </Border>
              </Border>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto" />
              <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="2,0,2,2" />
              <Setter Value="{StaticResource Ŋ}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Left">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
              <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto" />
              <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*" />
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
              <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="2,2,-1,2" />
              <Setter Value="{StaticResource ŋ}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Right">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
              <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*" />
              <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto" />
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
              <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="-1,2,2,2" />
              <Setter Value="{StaticResource Ō}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ŏ">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="3,3,3,1" StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ŏ" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFFFF" Offset="0" />
      <GradientStop Color="#FFECEBE6" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ő" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFFFF" Offset="0" />
      <GradientStop Color="#FFECEBE6" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ő" Color="#FFFCFCFE" />
  <SolidColorBrush x:Key="Œ" Color="#FFF5F4EA" />
  <SolidColorBrush x:Key="œ" Color="#FFFFC73C" />
  <SolidColorBrush x:Key="Ŕ" Color="#FFE68B2C" />
  <SolidColorBrush x:Key="û" Color="#FFFFC73C" />
  <SolidColorBrush x:Key="ú" Color="#FFE68B2C" />
  <SolidColorBrush x:Key="ŕ" Color="#FFC9C7BA" />
  <Style x:Key="{x:Type TabItem}" TargetType="{x:Type TabItem}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource Ŏ}" />
    <Setter Property="Control.Padding" Value="12,2,12,2" />
    <Setter Property="Control.BorderThickness" Value="1,1,1,0" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource ō}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Background" Value="{StaticResource ŏ}" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <Border SnapsToDevicePixels="True">
            <Grid Margin="0,0,1,0">
              <Grid Name="Transform">
                <Border Name="Bd" CornerRadius="3,3,0,0" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" />
                <Border Name="HighlightBorder" Height="3" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0" VerticalAlignment="Top" />
              </Grid>
              <Border BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}">
                <ContentPresenter ContentSource="Header" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" RecognizesAccessKey="True" HorizontalAlignment="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" VerticalAlignment="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
              </Border>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="HighlightBorder" Value="{StaticResource ú}" Property="Border.BorderBrush" />
              <Setter TargetName="HighlightBorder" Value="{StaticResource û}" Property="Border.Background" />
              <Setter TargetName="Bd" Value="{StaticResource Ő}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="TabItem.IsSelected" Value="True">
              <Setter Property="Panel.ZIndex" Value="1" />
              <Setter TargetName="HighlightBorder" Value="{StaticResource Ŕ}" Property="Border.BorderBrush" />
              <Setter TargetName="HighlightBorder" Value="{StaticResource œ}" Property="Border.Background" />
              <Setter TargetName="Bd" Value="{StaticResource ő}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Bottom">
              <Setter TargetName="Transform" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <ScaleTransform ScaleX="1" ScaleY="-1" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Left">
              <Setter TargetName="Transform" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Right">
              <Setter TargetName="Transform" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="90" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
              <Setter TargetName="Bd" Value="{StaticResource Œ}" Property="Border.Background" />
              <Setter TargetName="Bd" Value="{StaticResource ŕ}" Property="Border.BorderBrush" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="True" />
                <Condition Property="TabItem.TabStripPlacement" Value="Top" />
              </MultiTrigger.Conditions>
              <Setter Property="FrameworkElement.Margin" Value="-2,-2,-2,-1" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="True" />
                <Condition Property="TabItem.TabStripPlacement" Value="Bottom" />
              </MultiTrigger.Conditions>
              <Setter Property="FrameworkElement.Margin" Value="-2" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="True" />
                <Condition Property="TabItem.TabStripPlacement" Value="Left" />
              </MultiTrigger.Conditions>
              <Setter Property="FrameworkElement.Margin" Value="-2,-2,-1,-2" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="True" />
                <Condition Property="TabItem.TabStripPlacement" Value="Right" />
              </MultiTrigger.Conditions>
              <Setter Property="FrameworkElement.Margin" Value="-1,-2,-2,-2" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type TextBoxBase}" TargetType="{x:Type TextBoxBase}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource Ý}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
    <Setter Property="Control.Padding" Value="2" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="UIElement.AllowDrop" Value="True" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True">
            <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBoxBase}}" TargetType="{x:Type TextBox}" />
  <Style x:Key="{x:Type RichTextBox}" BasedOn="{StaticResource {x:Type TextBoxBase}}" TargetType="{x:Type RichTextBox}">
    <Style.Resources>
      <ResourceDictionary>
        <Style TargetType="{x:Type FlowDocument}">
          <Setter Property="FrameworkContentElement.OverridesDefaultStyle" Value="True" />
        </Style>
        <Style BasedOn="{StaticResource {x:Type Hyperlink}}" TargetType="{x:Type Hyperlink}">
          <Style.Triggers>
            <Trigger x:Key="{x:Type Hyperlink}" Property="ContentElement.IsMouseOver" Value="True">
              <Setter Property="TextElement.Foreground" Value="#FF0000FF" />
            </Trigger>
            <Trigger Property="ContentElement.IsEnabled" Value="False">
              <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </Style.Triggers>
        </Style>
      </ResourceDictionary>
    </Style.Resources>
    <Setter Property="FrameworkElement.MinWidth" Value="10" />
  </Style>
  <Style x:Key="{x:Type PasswordBox}" TargetType="{x:Type PasswordBox}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource Ý}" />
    <Setter Property="Control.FontFamily" Value="Times New Roman" />
    <Setter Property="PasswordBox.PasswordChar" Value="●" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
    <Setter Property="Control.Padding" Value="2" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="UIElement.AllowDrop" Value="True" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True">
            <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Thumb}" TargetType="{x:Type Thumb}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
            <Grid>
              <Border BorderThickness="0,0,1,1" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
              <Border BorderThickness="0,0,1,1" Margin="1" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
              <Border Margin="2" Background="{TemplateBinding Control.Background}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" />
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.InfoTextBrushKey}}" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}" />
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}" />
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}" />
    <Setter Property="Control.Padding" Value="1,1,3,1" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="ToolTip.HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolTip}">
          <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent" SnapsToDevicePixels="True">
            <Border Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" Padding="{TemplateBinding Control.Padding}">
              <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Border>
          </theme:SystemDropShadowChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ToolTip.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type TreeView}" TargetType="{x:Type TreeView}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource Ý}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Padding" Value="1" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeView}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True">
            <ScrollViewer Name="_tv_scrollviewer_" Background="{TemplateBinding Control.Background}" Focusable="False" CanContentScroll="False" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
              <ItemsPresenter />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
              <Setter TargetName="_tv_scrollviewer_" Property="ScrollViewer.CanContentScroll" Value="True" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
        <Setter Property="ItemsControl.ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="Ű" TargetType="{x:Type ToggleButton}">
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="FrameworkElement.Width" Value="19" />
    <Setter Property="FrameworkElement.Height" Value="13" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Width="19" Height="13" Background="#00FFFFFF">
            <Border Width="9" Height="9" BorderThickness="1" BorderBrush="#FF7898B5" CornerRadius="1" SnapsToDevicePixels="True">
              <Border.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                  <GradientBrush.GradientStops>
                    <GradientStop Color="White" Offset=".2" />
                    <GradientStop Color="#FFC0B7A6" Offset="1" />
                  </GradientBrush.GradientStops>
                </LinearGradientBrush>
              </Border.Background>
              <Path Name="ExpandPath" Margin="1,1,1,1" Fill="#FF000000" Data="M0,2L0,3 2,3 2,5 3,5 3,3 5,3 5,2 3,2 3,0 2,0 2,2z" />
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter TargetName="ExpandPath" Property="Path.Data" Value="M0,2L0,3 5,3 5,2z" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ű">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.Padding" Value="1,0,0,0" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ű}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition MinWidth="19" Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition />
            </Grid.RowDefinitions>
            <ToggleButton Name="Expander" Style="{StaticResource Ű}" ClickMode="Press" IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}" />
            <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
              <ContentPresenter Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Border>
            <ItemsPresenter Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TreeViewItem.IsExpanded" Value="False">
              <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="False">
              <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="TreeViewItem.IsSelected" Value="True">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
              <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TreeViewItem.IsSelected" Value="True" />
                <Condition Property="TreeViewItem.IsSelectionActive" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
              <Setter Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Control.Foreground" />
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
        <Setter Property="ItemsControl.ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type UserControl}" TargetType="{x:Type UserControl}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type UserControl}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="Ų" TargetType="{x:Type Window}">
    <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
      <Grid>
        <AdornerDecorator>
          <ContentPresenter />
        </AdornerDecorator>
        <ResizeGrip Name="WindowResizeGrip" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed" IsTabStop="False" />
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Window.ResizeMode" Value="CanResizeWithGrip" />
          <Condition Property="Window.WindowState" Value="Normal" />
        </MultiTrigger.Conditions>
        <Setter TargetName="WindowResizeGrip" Property="UIElement.Visibility" Value="Visible" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type Window}" TargetType="{x:Type Window}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Window}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
            <AdornerDecorator>
              <ContentPresenter />
            </AdornerDecorator>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Window.ResizeMode" Value="CanResizeWithGrip">
        <Setter Property="Control.Template" Value="{StaticResource Ų}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <JournalEntryListConverter x:Key="È" />
  <Style x:Key="É" TargetType="{x:Type MenuItem}">
    <Setter Property="HeaderedItemsControl.Header" Value="{Binding Path=Name}" />
    <Setter Property="MenuItem.Command" Value="NavigationCommands.NavigateJournal" />
    <Setter Property="MenuItem.CommandTarget" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type NavigationWindow}}}" />
    <Setter Property="MenuItem.CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}" />
  </Style>
  <Style x:Key="Ê" TargetType="{x:Type MenuItem}">
    <Setter Property="FrameworkElement.Margin" Value="0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <DockPanel Name="Panel" Background="#00FFFFFF">
            <Popup Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}">
              <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">
                <Border Name="SubMenuBorder" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
                  <ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}}">
                    <ItemsPresenter Margin="2" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" />
                  </ScrollViewer>
                </Border>
              </theme:SystemDropShadowChrome>
            </Popup>
            <Path Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 2 0 0" Fill="#FFFFFFFF" Stroke="#FFAAAAAA" StrokeThickness="1" Data="{StaticResource Ë}" />
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
              <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
              <Setter TargetName="Arrow" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Shape.Fill" />
              <Setter TargetName="Panel" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Panel.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Arrow" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Shape.Fill" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="True" />
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ì" TargetType="{x:Type Menu}">
    <Setter Property="ItemsControl.ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <DockPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Padding" Value="0,0,0,0" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="Menu.IsMainMenu" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <ItemsPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Í" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Margin" Value="0,0,0,0" />
    <Setter Property="UIElement.IsEnabled" Value="False" />
    <Setter Property="ButtonBase.Command" Value="NavigationCommands.BrowseBack" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <DockPanel>
            <Rectangle Name="R1" DockPanel.Dock="Right" Width="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
            <Rectangle Name="B1" DockPanel.Dock="Bottom" Height="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
            <Rectangle Name="L1" DockPanel.Dock="Left" Width="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
            <Rectangle Name="T1" DockPanel.Dock="Top" Height="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Viewbox Grid.Column="0" Grid.Row="0">
                <Grid Width="50" Height="50" Margin="15,0,0,0">
                  <Ellipse Name="EllipseBackground" Opacity="1" StrokeThickness="2">
                    <Shape.Fill>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="#B3E2A2" Offset="0" />
                            <GradientStop Color="#25B40E" Offset="1" />
                          </GradientStopCollection>
                        </GradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Shape.Fill>
                    <Shape.Stroke>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="black" Offset="0" />
                            <GradientStop Color="#ccffffff" Offset="1" />
                          </GradientStopCollection>
                        </GradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Shape.Stroke>
                  </Ellipse>
                  <Ellipse Name="EllipseShine" Stroke="#00FFFFFF" Margin="5,5,5,15">
                    <Shape.Fill>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="#aaffffff" Offset="0" />
                            <GradientStop Color="transparent" Offset="1" />
                          </GradientStopCollection>
                        </GradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Shape.Fill>
                  </Ellipse>
                  <Path Name="Arrow" Fill="#FFFFFFFF" Stroke="#FF086403" Data="M0.5,20.468C0.502,20.808 0.536,21.147 0.602,21.481 0.634,21.643 0.694,21.793 0.741,21.949 0.793,22.125 0.833,22.304 0.904,22.476 0.98,22.659 1.084,22.825 1.178,22.997 1.251,23.129 1.309,23.267 1.394,23.394 1.59,23.688 1.812,23.962 2.061,24.211L16.672,38.822C18.755,40.905 22.131,40.905 24.214,38.822 26.297,36.739 26.297,33.363 24.214,31.28L18.705,25.771 42.496,25.771C45.441,25.771 47.829,23.383 47.829,20.438 47.829,17.492 45.441,15.105 42.496,15.105L18.732,15.105 24.241,9.596C26.324,7.513 26.324,4.137 24.241,2.054 22.158,-0.0289999999999981 18.782,-0.0289999999999981 16.699,2.054L2.203,16.549C2.16,16.589 2.108,16.619 2.067,16.66 2.065,16.662 2.062,16.663 2.06,16.666 2.058,16.668 2.057,16.67 2.055,16.672 1.809,16.919 1.59,17.189 1.396,17.479 1.308,17.611 1.247,17.754 1.172,17.892 1.08,18.059 0.98,18.22 0.906,18.397 0.834,18.572 0.792,18.754 0.739,18.935 0.694,19.088 0.635,19.234 0.604,19.393 0.536,19.732 0.5,20.075 0.5,20.419 0.5,20.425 0.498,20.431 0.498,20.438 0.498,20.448 0.5,20.458 0.5,20.468z">
                    <UIElement.RenderTransform>
                      <TransformGroup>
                        <TransformGroup.Children>
                          <TransformCollection>
                            <ScaleTransform ScaleX="0.65" ScaleY="0.65" />
                            <TranslateTransform X="11.5" Y="10" />
                          </TransformCollection>
                        </TransformGroup.Children>
                      </TransformGroup>
                    </UIElement.RenderTransform>
                  </Path>
                </Grid>
              </Viewbox>
              <DockPanel Grid.Column="1" Grid.Row="0">
                <Rectangle Name="R2" DockPanel.Dock="Right" Width="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                <Rectangle Name="B2" DockPanel.Dock="Bottom" Height="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                <Rectangle Name="L2" DockPanel.Dock="Left" Width="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                <Rectangle Name="T2" DockPanel.Dock="Top" Height="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                <Grid Width="10">
                  <Menu Style="{StaticResource Ì}">
                    <MenuItem Name="NavWinMenu" Style="{StaticResource Ê}" ItemContainerStyle="{StaticResource É}" ItemsSource="{Binding Path=BackStack,Converter={StaticResource È},Mode=OneTime,RelativeSource={RelativeSource AncestorType={x:Type NavigationWindow}}}" IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen),Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
                  </Menu>
                </Grid>
              </DockPanel>
            </Grid>
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="EllipseBackground" Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="white" Offset="0" />
                        <GradientStop Color="gray" Offset="1" />
                      </GradientStopCollection>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="True" />
                <Condition Property="UIElement.IsEnabled" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="EllipseBackground" Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="#25B40E" Offset="0" />
                        <GradientStop Color="#086403" Offset="1" />
                      </GradientStopCollection>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter TargetName="NavWinMenu" Property="Control.Background" Value="#00FFFFFF" />
              <Setter TargetName="L1" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="R1" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="T1" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="B1" Property="UIElement.Visibility" Value="Visible" />
            </MultiTrigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="EllipseBackground" Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="#25B40E" Offset="0" />
                        <GradientStop Color="#086403" Offset="1" />
                      </GradientStopCollection>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter TargetName="Arrow" Property="UIElement.RenderTransform">
                <Setter.Value>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <ScaleTransform ScaleX="0.65" ScaleY="0.65" />
                        <TranslateTransform X="10" Y="12" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter TargetName="EllipseShine" Property="UIElement.RenderTransform">
                <Setter.Value>
                  <TranslateTransform X="0" Y="2" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="MenuItem.IsSubmenuOpen" Value="True">
              <Setter TargetName="L2" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="R2" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="T2" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="B2" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Î" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Margin" Value="0,0,0,0" />
    <Setter Property="UIElement.IsEnabled" Value="False" />
    <Setter Property="ButtonBase.Command" Value="NavigationCommands.BrowseForward" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <DockPanel>
            <Rectangle Name="R1" DockPanel.Dock="Right" Width="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
            <Rectangle Name="B1" DockPanel.Dock="Bottom" Height="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
            <Rectangle Name="L1" DockPanel.Dock="Left" Width="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
            <Rectangle Name="T1" DockPanel.Dock="Top" Height="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Viewbox Grid.Column="0" Grid.Row="0">
                <Grid Width="50" Height="50" Margin="15,0,0,0">
                  <Ellipse Name="EllipseBackground" Opacity="1" StrokeThickness="2">
                    <Shape.Fill>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="#B3E2A2" Offset="0" />
                            <GradientStop Color="#25B40E" Offset="1" />
                          </GradientStopCollection>
                        </GradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Shape.Fill>
                    <Shape.Stroke>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="black" Offset="0" />
                            <GradientStop Color="#ccffffff" Offset="1" />
                          </GradientStopCollection>
                        </GradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Shape.Stroke>
                  </Ellipse>
                  <Ellipse Name="EllipseShine" Stroke="#00FFFFFF" Margin="5,3,5,15">
                    <Shape.Fill>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="#aaffffff" Offset="0" />
                            <GradientStop Color="transparent" Offset="1" />
                          </GradientStopCollection>
                        </GradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Shape.Fill>
                  </Ellipse>
                  <Path Name="Arrow" Fill="#FFFFFFFF" Stroke="#FF086403" Data="M47.82,20.407C47.818,20.067 47.784,19.728 47.718,19.394 47.686,19.232 47.626,19.082 47.579,18.926 47.527,18.75 47.487,18.571 47.416,18.399 47.34,18.216 47.236,18.05 47.142,17.878 47.069,17.746 47.011,17.608 46.926,17.481 46.73,17.187 46.508,16.913 46.259,16.664L31.647,2.053C29.564,-0.0300000000000002 26.188,-0.0300000000000002 24.105,2.053 22.022,4.136 22.022,7.512 24.105,9.595L29.614,15.104 5.823,15.104C2.878,15.104 0.49,17.492 0.49,20.437 0.49,23.383 2.878,25.77 5.823,25.77L29.588,25.77 24.079,31.279C21.996,33.362 21.996,36.738 24.079,38.821 26.162,40.904 29.538,40.904 31.621,38.821L46.118,24.324C46.161,24.284 46.213,24.254 46.254,24.213 46.256,24.211 46.259,24.21 46.261,24.207 46.263,24.205 46.264,24.203 46.266,24.201 46.512,23.954 46.731,23.684 46.925,23.394 47.013,23.262 47.074,23.119 47.149,22.981 47.241,22.814 47.341,22.653 47.415,22.476 47.487,22.301 47.529,22.119 47.582,21.938 47.627,21.785 47.686,21.639 47.717,21.48 47.784,21.141 47.82,20.798 47.821,20.454 47.821,20.448 47.823,20.442 47.823,20.435 47.823,20.427 47.82,20.417 47.82,20.407z">
                    <UIElement.RenderTransform>
                      <TransformGroup>
                        <TransformGroup.Children>
                          <TransformCollection>
                            <ScaleTransform ScaleX="0.65" ScaleY="0.65" />
                            <TranslateTransform X="8.5" Y="10" />
                          </TransformCollection>
                        </TransformGroup.Children>
                      </TransformGroup>
                    </UIElement.RenderTransform>
                  </Path>
                </Grid>
              </Viewbox>
              <DockPanel Grid.Column="1" Grid.Row="0">
                <Rectangle Name="R2" DockPanel.Dock="Right" Width="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                <Rectangle Name="B2" DockPanel.Dock="Bottom" Height="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                <Rectangle Name="L2" DockPanel.Dock="Left" Width="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                <Rectangle Name="T2" DockPanel.Dock="Top" Height="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                <Grid Width="10">
                  <Menu Style="{StaticResource Ì}">
                    <MenuItem Name="NavWinMenu" Style="{StaticResource Ê}" ItemContainerStyle="{StaticResource É}" ItemsSource="{Binding Path=ForwardStack,Converter={StaticResource È},Mode=OneTime,RelativeSource={RelativeSource AncestorType={x:Type NavigationWindow}}}" IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen),Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
                  </Menu>
                </Grid>
              </DockPanel>
            </Grid>
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="EllipseBackground" Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="white" Offset="0" />
                        <GradientStop Color="gray" Offset="1" />
                      </GradientStopCollection>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="True" />
                <Condition Property="UIElement.IsEnabled" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="EllipseBackground" Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="#25B40E" Offset="0" />
                        <GradientStop Color="#086403" Offset="1" />
                      </GradientStopCollection>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter TargetName="NavWinMenu" Property="Control.Background" Value="#00FFFFFF" />
              <Setter TargetName="L1" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="R1" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="T1" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="B1" Property="UIElement.Visibility" Value="Visible" />
            </MultiTrigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="EllipseBackground" Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="#25B40E" Offset="0" />
                        <GradientStop Color="#086403" Offset="1" />
                      </GradientStopCollection>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter TargetName="Arrow" Property="UIElement.RenderTransform">
                <Setter.Value>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <ScaleTransform ScaleX="0.65" ScaleY="0.65" />
                        <TranslateTransform X="10" Y="12" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter TargetName="EllipseShine" Property="UIElement.RenderTransform">
                <Setter.Value>
                  <TranslateTransform X="0" Y="2" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="MenuItem.IsSubmenuOpen" Value="True">
              <Setter TargetName="L2" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="R2" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="T2" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="B2" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="Ï" TargetType="{x:Type NavigationWindow}">
    <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
      <AdornerDecorator>
        <ContentPresenter Name="PART_NavWinCP" ClipToBounds="True" />
      </AdornerDecorator>
    </Border>
  </ControlTemplate>
  <Style x:Key="{x:Static SystemParameters.NavigationChromeStyleKey}" TargetType="{x:Type NavigationWindow}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.Template" Value="{StaticResource Ï}" />
  </Style>
  <ControlTemplate x:Key="Ð" TargetType="{x:Type NavigationWindow}">
    <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
      <DockPanel>
        <Grid FlowDirection="{x:Static theme:PlatformCulture.FlowDirection}" DockPanel.Dock="Top" Height="30">
          <Panel.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
              <GradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="silver" Offset="0" />
                  <GradientStop Color="white" Offset="1" />
                </GradientStopCollection>
              </GradientBrush.GradientStops>
            </LinearGradientBrush>
          </Panel.Background>
          <DockPanel LastChildFill="False">
            <Button Style="{StaticResource Í}" DockPanel.Dock="left" Width="40" IsEnabled="{TemplateBinding NavigationWindow.CanGoBack}" />
            <Button Style="{StaticResource Î}" DockPanel.Dock="left" Width="40" IsEnabled="{TemplateBinding NavigationWindow.CanGoForward}" />
          </DockPanel>
        </Grid>
        <Border>
          <AdornerDecorator>
            <ContentPresenter Name="PART_NavWinCP" ClipToBounds="True" />
          </AdornerDecorator>
        </Border>
      </DockPanel>
    </Border>
  </ControlTemplate>
  <Style x:Key="{x:Static SystemParameters.NavigationChromeDownLevelStyleKey}" TargetType="{x:Type NavigationWindow}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.Template" Value="{StaticResource Ð}" />
    <Style.Triggers>
      <Trigger Property="NavigationWindow.ShowsNavigationUI" Value="False">
        <Setter Property="Control.Template" Value="{StaticResource Ï}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="Ù">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="4,4,21,4" StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ú" TargetType="{x:Type TextBox}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="UIElement.AllowDrop" Value="True" />
    <Setter Property="FrameworkElement.MinWidth" Value="0" />
    <Setter Property="FrameworkElement.MinHeight" Value="0" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ScrollViewer Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Background="#00FFFFFF" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Û" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.MinWidth" Value="0" />
    <Setter Property="FrameworkElement.MinHeight" Value="0" />
    <Setter Property="FrameworkElement.Width" Value="Auto" />
    <Setter Property="FrameworkElement.Height" Value="Auto" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="ButtonBase.ClickMode" Value="Press" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton" />
            </Grid.ColumnDefinitions>
            <theme:ScrollChrome Name="Chrome" ThemeColor="NormalColor" HasOuterBorder="False" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ToggleButton.IsChecked}" p11:Grid.Column="1" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" ScrollChrome.ScrollGlyph="DownArrow" Padding="1,0,0,0" xmlns:p11="http://schemas.microsoft.com/winfx/2006/xaml/presentation" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="Ü" TargetType="{x:Type ComboBox}">
    <Grid SnapsToDevicePixels="True">
      <Border Name="Bd" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" Padding="1">
        <Grid Grid.IsSharedSizeScope="True">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton" />
          </Grid.ColumnDefinitions>
          <TextBox Name="PART_EditableTextBox" Grid.Column="1" Style="{StaticResource Ú}" Margin="{TemplateBinding Control.Padding}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" IsReadOnly="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent}}" />
          <ToggleButton Grid.ColumnSpan="3" Style="{StaticResource Û}" Background="{x:Null}" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>
      </Border>
      <Popup Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" IsOpen="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}">
        <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
          <Border Name="DropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
            <ScrollViewer>
              <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
        </theme:SystemDropShadowChrome>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="ItemsControl.HasItems" Value="False">
        <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
        <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
      </Trigger>
      <Trigger Property="ItemsControl.IsGrouping" Value="True">
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
      </Trigger>
      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
        <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
        <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource Ù}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource Ý}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Padding" Value="1" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid SnapsToDevicePixels="True">
            <Border Name="Bd" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" Padding="1">
              <Grid Grid.IsSharedSizeScope="True">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="1" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton" />
                </Grid.ColumnDefinitions>
                <Border Name="SelectedItemBorder" Grid.ColumnSpan="2" Margin="{TemplateBinding Control.Padding}" />
                <ContentPresenter Grid.Column="1" Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}" Margin="{TemplateBinding Control.Padding}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <ToggleButton Grid.ColumnSpan="3" Style="{StaticResource Û}" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
              </Grid>
            </Border>
            <Popup Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" IsOpen="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}">
              <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                <Border Name="DropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                  <ScrollViewer>
                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                  </ScrollViewer>
                </Border>
              </theme:SystemDropShadowChrome>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ComboBox.IsSelectionBoxHighlighted" Value="True" />
                <Condition Property="ComboBox.IsDropDownOpen" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
            </MultiTrigger>
            <Trigger Property="ComboBox.IsSelectionBoxHighlighted" Value="True">
              <Setter TargetName="SelectedItemBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="False">
              <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ComboBox.IsEditable" Value="True">
        <Setter Property="Control.IsTabStop" Value="False" />
        <Setter Property="Control.Padding" Value="0,1" />
        <Setter Property="Control.Template" Value="{StaticResource Ü}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <ControlTemplate x:Key="å" TargetType="{x:Type Frame}">
    <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}">
      <DockPanel>
        <Grid Background="{StaticResource æ}" DockPanel.Dock="Top" Height="22">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="16" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>
          <Menu Name="NavMenu" Grid.ColumnSpan="3" Height="16" Margin="1,0,0,0" VerticalAlignment="Center" Style="{StaticResource ç}">
            <MenuItem Padding="0,2,4,0" Style="{StaticResource è}" ItemContainerStyle="{StaticResource é}" IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen),Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
              <ItemsControl.ItemsSource>
                <MultiBinding Converter="{StaticResource ê}">
                  <MultiBinding.Bindings>
                    <Binding Path="BackStack" RelativeSource="{RelativeSource TemplatedParent}" />
                    <Binding Path="ForwardStack" RelativeSource="{RelativeSource TemplatedParent}" />
                  </MultiBinding.Bindings>
                </MultiBinding>
              </ItemsControl.ItemsSource>
            </MenuItem>
          </Menu>
          <Path Grid.Column="0" SnapsToDevicePixels="False" IsHitTestVisible="False" Margin="2,0,0,0" Grid.ColumnSpan="3" StrokeThickness="1" HorizontalAlignment="Left" VerticalAlignment="Center" Data="M22.5767,21.035Q27,19.37,31.424,21.035A12.5,12.5,0,0,0,53.5,13A12.5,12.5,0,0,0,37.765,0.926Q27,4.93,16.235,0.926A12.5,12.5,0,0,0,0.5,13A12.5,12.5,0,0,0,22.5767,21.035z">
            <Shape.Fill>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="#A0C2CCE7" Offset="0" />
                    <GradientStop Color="#60FFFFFF" Offset="1" />
                  </GradientStopCollection>
                </GradientBrush.GradientStops>
              </LinearGradientBrush>
            </Shape.Fill>
            <Shape.Stroke>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <GradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="#FFB7C2E3" Offset="0.2" />
                    <GradientStop Color="#A0FFFFFF" Offset="0.9" />
                  </GradientStopCollection>
                </GradientBrush.GradientStops>
              </LinearGradientBrush>
            </Shape.Stroke>
            <FrameworkElement.LayoutTransform>
              <ScaleTransform ScaleX="0.667" ScaleY="0.667" />
            </FrameworkElement.LayoutTransform>
          </Path>
          <Button Style="{StaticResource ë}" Margin="3,0,1,0" Grid.Column="0">
            <FrameworkElement.LayoutTransform>
              <ScaleTransform ScaleX="0.667" ScaleY="0.667" />
            </FrameworkElement.LayoutTransform>
          </Button>
          <Button Style="{StaticResource ì}" Margin="1,0,0,0" Grid.Column="1">
            <FrameworkElement.LayoutTransform>
              <ScaleTransform ScaleX="0.667" ScaleY="0.667" />
            </FrameworkElement.LayoutTransform>
          </Button>
        </Grid>
        <ContentPresenter Name="PART_FrameCP" />
      </DockPanel>
    </Border>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Frame.CanGoForward" Value="False" />
          <Condition Property="Frame.CanGoBack" Value="False" />
        </MultiTrigger.Conditions>
        <Setter TargetName="NavMenu" Property="UIElement.IsEnabled" Value="False" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type Frame}" TargetType="{x:Type Frame}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Frame}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}">
            <ContentPresenter Name="PART_FrameCP" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Frame.NavigationUIVisibility" Value="Visible">
        <Setter Property="Control.Template" Value="{StaticResource å}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Frame.JournalOwnership" Value="OwnsJournal" />
          <Condition Property="Frame.NavigationUIVisibility" Value="Automatic" />
        </MultiTrigger.Conditions>
        <Setter Property="Control.Template" Value="{StaticResource å}" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <DockPanel Margin="{TemplateBinding Control.Padding}">
              <ScrollViewer DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Focusable="False">
                <GridViewHeaderRowPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                  <GridViewRowPresenterBase.Columns>
                    <Binding Path="TemplatedParent.View.Columns" RelativeSource="{RelativeSource TemplatedParent}" />
                  </GridViewRowPresenterBase.Columns>
                </GridViewHeaderRowPresenter>
              </ScrollViewer>
              <ScrollContentPresenter Name="PART_ScrollContentPresenter" KeyboardNavigation.DirectionalNavigation="Local" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </DockPanel>
            <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Minimum="0.0" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Cursor="Arrow" Value="{Binding Path=HorizontalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}" />
            <ScrollBar Name="PART_VerticalScrollBar" Orientation="Vertical" Grid.Column="1" Minimum="0.0" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Cursor="Arrow" Value="{Binding Path=VerticalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}" />
            <DockPanel Grid.Column="1" Grid.Row="1" LastChildFill="False" Background="{Binding Path=Background,ElementName=PART_VerticalScrollBar}">
              <Rectangle DockPanel.Dock="Left" Width="1" Fill="#FFFFFFFF" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" />
              <Rectangle DockPanel.Dock="Top" Height="1" Fill="#FFFFFFFF" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" />
            </DockPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ñ" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFECE9D8" Offset="0" />
      <GradientStop Color="#FFCBC7B8" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ò" Color="#FFECE9D8" />
  <SolidColorBrush x:Key="ó" Color="#FFCBC7B8" />
  <SolidColorBrush x:Key="ô" Color="#FFFAF8F3" />
  <SolidColorBrush x:Key="õ" Color="#FFA5A597" />
  <SolidColorBrush x:Key="ö" Color="#FFDEDFD8" />
  <SolidColorBrush x:Key="÷" Color="#FFCECDC6" />
  <SolidColorBrush x:Key="ø" Color="#FFC7C5B2" />
  <Style x:Key="ù" TargetType="{x:Type Thumb}">
    <Setter Property="Canvas.Right" Value="-9" />
    <Setter Property="FrameworkElement.Width" Value="18" />
    <Setter Property="FrameworkElement.Height" Value="{Binding Path=ActualHeight,RelativeSource={RelativeSource TemplatedParent}}" />
    <Setter Property="Control.Padding" Value="0,3,0,4" />
    <Setter Property="Control.Background" Value="{StaticResource ø}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Control.Padding}" Background="#00FFFFFF">
            <DockPanel HorizontalAlignment="Center">
              <Rectangle Width="1" Fill="{TemplateBinding Control.Background}" />
              <Rectangle Width="1" Fill="#FFFFFFFF" />
            </DockPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Background" Value="{StaticResource ò}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Padding" Value="2,0,2,0" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
          <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Control.Background}">
            <Border Name="HighlightBorder" VerticalAlignment="Bottom" Background="{StaticResource ñ}" BorderBrush="{StaticResource ó}" Height="3" BorderThickness="0,0,0,1" />
            <Border BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" Padding="{TemplateBinding Control.Padding}" Margin="1,0,1,0">
              <ContentPresenter Name="HeaderContent" Margin="0,0,0,1" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Border>
            <Canvas>
              <Thumb Name="PART_HeaderGripper" Style="{StaticResource ù}" />
            </Canvas>
            <Border Name="HeaderPressBorder" BorderThickness="1" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="HighlightBorder" Value="{StaticResource ú}" Property="Border.BorderBrush" />
              <Setter TargetName="HighlightBorder" Value="{StaticResource û}" Property="Border.Background" />
              <Setter TargetName="HighlightBorder" Property="Border.CornerRadius" Value="0,0,3,3" />
              <Setter TargetName="HighlightBorder" Property="Border.BorderThickness" Value="1,0,1,1" />
              <Setter TargetName="PART_HeaderGripper" Property="Control.Background" Value="#00FFFFFF" />
              <Setter Value="{StaticResource ô}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="HighlightBorder" Property="UIElement.Visibility" Value="Hidden" />
              <Setter TargetName="PART_HeaderGripper" Property="UIElement.Visibility" Value="Hidden" />
              <Setter TargetName="HeaderPressBorder" Value="{StaticResource õ}" Property="Border.BorderBrush" />
              <Setter TargetName="HeaderPressBorder" Property="FrameworkElement.Margin" Value="1,0,0,0" />
              <Setter TargetName="HeaderContent" Property="FrameworkElement.Margin" Value="1,1,0,0" />
              <Setter Value="{StaticResource ö}" Property="Control.Background" />
              <Setter Value="{StaticResource ö}" Property="Control.BorderBrush" />
            </Trigger>
            <Trigger Property="FrameworkElement.Height" Value="Auto">
              <Setter Property="FrameworkElement.MinHeight" Value="20" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="GridViewColumnHeader.Role" Value="Floating">
        <Setter Property="UIElement.Opacity" Value="0.7" />
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Canvas Name="PART_FloatingHeaderCanvas" />
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="GridViewColumnHeader.Role" Value="Padding">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Grid Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
                <Border VerticalAlignment="Bottom" Background="{StaticResource ñ}" BorderBrush="{StaticResource ó}" Height="3" BorderThickness="0,0,0,1" />
                <Border BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" Padding="{TemplateBinding Control.Padding}" Margin="1,0,1,0" />
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="FrameworkElement.Height" Value="Auto">
                  <Setter Property="FrameworkElement.MinHeight" Value="20" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Static GridView.GridViewStyleKey}" TargetType="{x:Type ListView}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource Ý}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True">
            <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}" Padding="{TemplateBinding Control.Padding}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ItemsControl.IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="Ŗ" Color="#E1E6E8" />
  <SolidColorBrush x:Key="ŗ" Color="#C1D2EE" />
  <SolidColorBrush x:Key="Ř" Color="#316AC5" />
  <SolidColorBrush x:Key="ř" Color="#ECE9D8" />
  <SolidColorBrush x:Key="Ś" Color="#B4B1A3" />
  <SolidColorBrush x:Key="ś" Color="#C5C2B8" />
  <SolidColorBrush x:Key="Ŝ" Color="#C1D2EE" />
  <SolidColorBrush x:Key="ŝ" Color="#316AC5" />
  <SolidColorBrush x:Key="Ş" Color="#E1E6E8" />
  <SolidColorBrush x:Key="ş" Color="#98B5E2" />
  <SolidColorBrush x:Key="Š" Color="#4B4B6F" />
  <SolidColorBrush x:Key="š" Color="#8A867A" />
  <SolidColorBrush x:Key="Ţ" Color="#FCFCF9" />
  <SolidColorBrush x:Key="ţ" Color="#E1E6E8" />
  <LinearGradientBrush x:Key="Ť" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FBFBF9" Offset="0" />
      <GradientStop Color="#F7F5EF" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ť" StartPoint="0,0" EndPoint="688,0" MappingMode="Absolute">
    <GradientBrush.GradientStops>
      <GradientStop Color="#E5E5D7" Offset="0" />
      <GradientStop Color="#F3F2E7" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ŧ" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FAF9F5" Offset="0" />
      <GradientStop Color="#EBE7E0" Offset="0.5" />
      <GradientStop Color="#C0C0A8" Offset="0.9" />
      <GradientStop Color="#A3A37C" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ŧ" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FAF9F5" Offset="0" />
      <GradientStop Color="#EBE7E0" Offset="0.5" />
      <GradientStop Color="#C0C0A8" Offset="0.9" />
      <GradientStop Color="#A3A37C" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="Ũ" Color="#C1BEB3" />
  <LinearGradientBrush x:Key="ũ" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#EFEEEB" Offset="0" />
      <GradientStop Color="#E1E1DA" Offset="0.5" />
      <GradientStop Color="#98987E" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Ū" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#EFEEEB" Offset="0" />
      <GradientStop Color="#E1E1DA" Offset="0.5" />
      <GradientStop Color="#98987E" Offset="1" />
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Geometry x:Key="ū">M 0,2.5 L 2.5,5 L 7,0.5</Geometry>
  <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Control.Background" Value="{StaticResource ś}" />
    <Setter Property="FrameworkElement.MinWidth" Value="1" />
    <Setter Property="FrameworkElement.MinHeight" Value="1" />
    <Setter Property="FrameworkElement.Margin" Value="2,2,2,2" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Padding" Value="2" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource ŝ}" Property="Border.BorderBrush" />
              <Setter TargetName="Bd" Value="{StaticResource Ŝ}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource ŝ}" Property="Border.BorderBrush" />
              <Setter TargetName="Bd" Value="{StaticResource Ŝ}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource Š}" Property="Border.BorderBrush" />
              <Setter TargetName="Bd" Value="{StaticResource ş}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Padding" Value="2" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter Value="{StaticResource ŝ}" Property="Control.BorderBrush" />
              <Setter Value="{StaticResource Ş}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter Value="{StaticResource ŝ}" Property="Control.BorderBrush" />
              <Setter Value="{StaticResource Ŝ}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
              <Setter Value="{StaticResource ŝ}" Property="Control.BorderBrush" />
              <Setter Value="{StaticResource Ŝ}" Property="Control.Background" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="True" />
                <Condition Property="ToggleButton.IsChecked" Value="true" />
              </MultiTrigger.Conditions>
              <Setter Value="{StaticResource Š}" Property="Control.BorderBrush" />
              <Setter Value="{StaticResource ş}" Property="Control.Background" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsKeyboardFocused" Value="True" />
                <Condition Property="ToggleButton.IsChecked" Value="true" />
              </MultiTrigger.Conditions>
              <Setter Value="{StaticResource Š}" Property="Control.BorderBrush" />
              <Setter Value="{StaticResource ş}" Property="Control.Background" />
            </MultiTrigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{StaticResource Š}" Property="Control.BorderBrush" />
              <Setter Value="{StaticResource ş}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" TargetType="{x:Type CheckBox}" />
  <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" TargetType="{x:Type RadioButton}" />
  <Style x:Key="Ŭ" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.MinWidth" Value="0" />
    <Setter Property="FrameworkElement.MinHeight" Value="0" />
    <Setter Property="FrameworkElement.Width" Value="Auto" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="ButtonBase.ClickMode" Value="Press" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid Background="#00FFFFFF">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton" />
            </Grid.ColumnDefinitions>
            <Border Name="Chrome" Grid.Column="1" Width="13" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True">
              <Path Name="ArrowDownPath" Data="M2.5,0L8.5,0 5.5,3z" Fill="#FF000000" VerticalAlignment="Center" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Chrome" Value="{x:Null}" Property="Border.BorderBrush" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="True" />
                <Condition Property="ToggleButton.IsChecked" Value="false" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Chrome" Value="{StaticResource Ŝ}" Property="Border.Background" />
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Chrome" Value="{StaticResource Š}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="Chrome" Value="{StaticResource ş}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="ArrowDownPath" Value="{StaticResource Ś}" Property="Shape.Fill" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="FrameworkElement.Margin" Value="1,0" />
    <Setter Property="Control.Padding" Value="0" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
    <Setter Property="FrameworkElement.MinHeight" Value="18" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid SnapsToDevicePixels="True">
            <Grid Grid.IsSharedSizeScope="True">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton" />
              </Grid.ColumnDefinitions>
              <Border Name="Background" Background="{TemplateBinding Control.Background}" />
              <Border Name="SelectedContentBorder" Margin="2,2,1,2">
                <ContentPresenter Name="ContentSite" Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" Margin="{TemplateBinding Control.Padding}" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
              </Border>
              <Border Name="Border" Grid.ColumnSpan="2" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" />
              <ToggleButton Name="DropDownButton" BorderBrush="#FFFFFFFF" BorderThickness="1" Grid.ColumnSpan="2" Style="{StaticResource Ŭ}" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
              <TextBox Name="PART_EditableTextBox" Padding="{TemplateBinding Control.Padding}" Margin="1,1,0,1" MinHeight="18" Style="{StaticResource Ú}" Visibility="Collapsed" VerticalAlignment="Center" IsReadOnly="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>
            <Popup Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" IsOpen="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}">
              <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                <Border Name="DropDownBorder" Background="{TemplateBinding Control.Background}" BorderThickness="1" BorderBrush="{StaticResource š}">
                  <ScrollViewer>
                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                  </ScrollViewer>
                </Border>
              </theme:SystemDropShadowChrome>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
              <Setter TargetName="Background" Value="{StaticResource ř}" Property="Border.Background" />
              <Setter TargetName="Background" Property="Grid.ColumnSpan" Value="2" />
              <Setter TargetName="Border" Value="{StaticResource Ś}" Property="Border.BorderBrush" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsKeyboardFocusWithin" Value="True" />
                <Condition Property="ComboBox.IsDropDownOpen" Value="False" />
                <Condition Property="ComboBox.IsEditable" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="SelectedContentBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
            </MultiTrigger>
            <Trigger Property="ComboBox.IsEditable" Value="True">
              <Setter TargetName="DropDownButton" Value="{x:Null}" Property="Control.Background" />
              <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Collapsed" />
              <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="DropDownButton" Value="{StaticResource ŝ}" Property="Control.BorderBrush" />
              <Setter TargetName="DropDownButton" Value="{StaticResource Ŝ}" Property="Control.Background" />
              <Setter TargetName="Border" Value="{StaticResource ŝ}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="True">
              <Setter TargetName="DropDownButton" Value="{StaticResource ŝ}" Property="Control.BorderBrush" />
              <Setter TargetName="DropDownButton" Value="{StaticResource Ŝ}" Property="Control.Background" />
              <Setter TargetName="Border" Value="{StaticResource ŝ}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="True" />
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="False">
              <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95" />
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsKeyboardFocusWithin" Value="True" />
                <Condition Property="ComboBox.IsDropDownOpen" Value="False" />
                <Condition Property="ComboBox.IsEditable" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
            </MultiTrigger>
            <Trigger Property="ComboBox.IsEditable" Value="True">
              <Setter Property="Control.Padding" Value="2" />
              <Setter Property="Control.IsTabStop" Value="False" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="FrameworkElement.Margin" Value="1,0" />
    <Setter Property="Control.Padding" Value="2" />
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
    <Setter Property="FrameworkElement.MinHeight" Value="18" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <Border Name="Border" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
            <ScrollViewer Name="PART_ContentHost" VerticalAlignment="Center" MinHeight="18" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
              <Setter TargetName="Border" Value="{StaticResource ř}" Property="Border.Background" />
              <Setter TargetName="Border" Value="{StaticResource Ś}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Border" Value="{StaticResource ŝ}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="True">
              <Setter TargetName="Border" Value="{StaticResource ŝ}" Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.MenuStyleKey}" TargetType="{x:Type Menu}">
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Resources>
      <ResourceDictionary>
        <Style TargetType="{x:Type Separator}">
          <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
          <Setter Property="Control.Background" Value="{StaticResource ś}" />
          <Setter Property="FrameworkElement.Height" Value="1" />
          <Setter Property="FrameworkElement.Margin" Value="0,1,0,0" />
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type Separator}">
                <Grid SnapsToDevicePixels="True">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Border Grid.Column="1" Margin="8,0,0,0" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" />
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
        <Style TargetType="{x:Type MenuItem}">
          <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
          <Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
          <Setter Property="Control.VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
          <Setter Property="Control.Background" Value="#00FFFFFF" />
          <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
          <Setter Property="Control.BorderThickness" Value="1" />
          <Setter Property="FrameworkElement.Margin" Value="0,1,0,0" />
          <Setter Property="Control.Padding" Value="8,3,8,3" />
          <Setter Property="DockPanel.Dock" Value="Top" />
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type MenuItem}">
                <Grid Background="#00FFFFFF" SnapsToDevicePixels="True">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="14" />
                  </Grid.ColumnDefinitions>
                  <Border Name="Border" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" Grid.ColumnSpan="4" Margin="1,0" />
                  <ContentPresenter Name="Icon" Margin="0" VerticalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                  <Border Name="GlyphPanel" Margin="0,1" Width="20" Height="20" Visibility="Hidden" BorderBrush="{StaticResource ŝ}" Background="{StaticResource ţ}" BorderThickness="1">
                    <Path VerticalAlignment="Center" HorizontalAlignment="Center" FlowDirection="LeftToRight" Stroke="{TemplateBinding Control.Foreground}" StrokeThickness="1.2" Data="{StaticResource ū}" />
                  </Border>
                  <ContentPresenter Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                  <TextBlock Grid.Column="2" Text="{TemplateBinding MenuItem.InputGestureText}" Margin="4,3,2,3" HorizontalAlignment="Right" />
                </Grid>
                <ControlTemplate.Triggers>
                  <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                  </Trigger>
                  <Trigger Property="MenuItem.IsChecked" Value="True">
                    <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                  </Trigger>
                  <Trigger Property="MenuItem.IsHighlighted" Value="True">
                    <Setter TargetName="Border" Value="{StaticResource ŝ}" Property="Border.BorderBrush" />
                    <Setter TargetName="Border" Value="{StaticResource Ŝ}" Property="Border.Background" />
                    <Setter TargetName="GlyphPanel" Value="{StaticResource Š}" Property="Border.BorderBrush" />
                    <Setter TargetName="GlyphPanel" Value="{StaticResource Ř}" Property="Border.Background" />
                  </Trigger>
                  <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Style.Triggers>
            <Trigger x:Key="{x:Type MenuItem}" Property="MenuItem.Role" Value="TopLevelHeader">
              <Setter Property="Control.Padding" Value="6,2,7,2" />
              <Setter Property="Grid.IsSharedSizeScope" Value="True" />
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border Name="Border" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" SnapsToDevicePixels="True">
                      <DockPanel Name="Header">
                        <ContentPresenter Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        <Path Name="GlyphPanel" Margin="4,0,6,0" Visibility="Collapsed" VerticalAlignment="Center" FlowDirection="LeftToRight" Stroke="{TemplateBinding Control.Foreground}" StrokeThickness="1.2" Data="{StaticResource ū}" />
                        <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        <Popup Name="PART_Popup" Placement="Bottom" HorizontalOffset="-1" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" AllowsTransparency="True" IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}">
                          <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">
                            <Border Background="{StaticResource Ţ}" BorderBrush="{StaticResource š}" BorderThickness="1">
                              <Grid Grid.IsSharedSizeScope="True">
                                <Grid.ColumnDefinitions>
                                  <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                  <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Fill="{StaticResource ŧ}" Margin="0,1" />
                                <Rectangle Fill="{StaticResource Ţ}" Grid.ColumnSpan="2" Margin="0,-1,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Height="1" Width="{Binding ElementName=Header,Path=ActualWidth}" />
                                <ScrollViewer CanContentScroll="True" Grid.ColumnSpan="2" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}}">
                                  <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle" Margin="0,0,0,1" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </ScrollViewer>
                              </Grid>
                            </Border>
                          </theme:SystemDropShadowChrome>
                        </Popup>
                      </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
                        <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                      </Trigger>
                      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                      </Trigger>
                      <Trigger Property="MenuItem.IsChecked" Value="True">
                        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
                        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                      </Trigger>
                      <Trigger Property="MenuItem.IsHighlighted" Value="True">
                        <Setter TargetName="Border" Value="{StaticResource ŝ}" Property="Border.BorderBrush" />
                        <Setter TargetName="Border" Value="{StaticResource Ŝ}" Property="Border.Background" />
                      </Trigger>
                      <Trigger Property="MenuItem.IsSubmenuOpen" Value="True">
                        <Setter TargetName="Border" Value="{StaticResource š}" Property="Border.BorderBrush" />
                        <Setter TargetName="Border" Value="{StaticResource Ť}" Property="Border.Background" />
                      </Trigger>
                      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                        <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
                        <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="True" />
                        <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
                      </Trigger>
                      <Trigger Property="UIElement.IsEnabled" Value="False">
                        <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="TopLevelItem">
              <Setter Property="FrameworkElement.Margin" Value="0,1,0,1" />
              <Setter Property="Control.Padding" Value="7,1,8,2" />
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border Name="Border" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" SnapsToDevicePixels="True">
                      <DockPanel>
                        <ContentPresenter Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        <Path Name="GlyphPanel" Margin="4,0,6,0" Visibility="Collapsed" VerticalAlignment="Center" FlowDirection="LeftToRight" Stroke="{TemplateBinding Control.Foreground}" StrokeThickness="1.2" Data="{StaticResource ū}" />
                        <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                      </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                      </Trigger>
                      <Trigger Property="MenuItem.IsChecked" Value="True">
                        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
                        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                      </Trigger>
                      <Trigger Property="MenuItem.IsHighlighted" Value="True">
                        <Setter TargetName="Border" Value="{StaticResource ŝ}" Property="Border.BorderBrush" />
                        <Setter TargetName="Border" Value="{StaticResource Ŝ}" Property="Border.Background" />
                      </Trigger>
                      <Trigger Property="UIElement.IsEnabled" Value="False">
                        <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
              <Setter Property="DockPanel.Dock" Value="Top" />
              <Setter Property="Control.Padding" Value="8,3,8,3" />
              <Setter Property="Grid.IsSharedSizeScope" Value="True" />
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid Background="#00FFFFFF" SnapsToDevicePixels="True">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                        <ColumnDefinition Width="14" />
                      </Grid.ColumnDefinitions>
                      <Border Name="Border" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" Grid.ColumnSpan="4" Margin="1,0" />
                      <ContentPresenter Name="Icon" Margin="3" VerticalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                      <Border Name="GlyphPanel" Margin="0,1" Width="20" Height="20" Visibility="Hidden" BorderBrush="{StaticResource ŝ}" Background="{StaticResource ţ}" BorderThickness="1">
                        <Path VerticalAlignment="Center" HorizontalAlignment="Center" FlowDirection="LeftToRight" Stroke="{TemplateBinding Control.Foreground}" StrokeThickness="1.2" Data="{StaticResource ū}" />
                      </Border>
                      <ContentPresenter Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                      <Path Grid.Column="3" DockPanel.Dock="Right" VerticalAlignment="Center" Margin="4,0,6,0" Fill="{TemplateBinding Control.Foreground}" Data="{StaticResource þ}" />
                      <Popup Name="PART_Popup" Placement="Right" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" AllowsTransparency="True" IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}">
                        <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">
                          <Border Background="{StaticResource Ţ}" BorderBrush="{StaticResource š}" BorderThickness="1" Grid.IsSharedSizeScope="True">
                            <Grid>
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="*" />
                              </Grid.ColumnDefinitions>
                              <Rectangle Fill="{StaticResource ŧ}" Margin="0,1" />
                              <ScrollViewer CanContentScroll="True" Grid.ColumnSpan="2" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},ResourceId=MenuScrollViewer}}">
                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle" Margin="0,0,0,1" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                              </ScrollViewer>
                            </Grid>
                          </Border>
                        </theme:SystemDropShadowChrome>
                      </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
                        <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                      </Trigger>
                      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                      </Trigger>
                      <Trigger Property="MenuItem.IsChecked" Value="True">
                        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
                        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                      </Trigger>
                      <Trigger Property="MenuItem.IsHighlighted" Value="True">
                        <Setter TargetName="Border" Value="{StaticResource ŝ}" Property="Border.BorderBrush" />
                        <Setter TargetName="Border" Value="{StaticResource Ŝ}" Property="Border.Background" />
                        <Setter TargetName="GlyphPanel" Value="{StaticResource Š}" Property="Border.BorderBrush" />
                        <Setter TargetName="GlyphPanel" Value="{StaticResource Ř}" Property="Border.Background" />
                      </Trigger>
                      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                        <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
                        <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="True" />
                        <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
                      </Trigger>
                      <Trigger Property="UIElement.IsEnabled" Value="False">
                        <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Trigger>
          </Style.Triggers>
        </Style>
      </ResourceDictionary>
    </Style.Resources>
  </Style>
  <Style x:Key="ŭ" TargetType="{x:Type Thumb}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Control.Padding}" Background="#00FFFFFF" SnapsToDevicePixels="True">
            <Rectangle>
              <Shape.Fill>
                <DrawingBrush Viewbox="0,0,4,4" Viewport="0,0,4,4" TileMode="Tile" ViewportUnits="Absolute" ViewboxUnits="Absolute">
                  <DrawingBrush.Drawing>
                    <DrawingGroup>
                      <DrawingGroup.Children>
                        <GeometryDrawing Brush="#FFFFFFFF" Geometry="M1,1L1,3 3,3 3,1z" />
                        <GeometryDrawing Brush="{StaticResource Ũ}" Geometry="M0,0L0,2 2,2 2,0z" />
                      </DrawingGroup.Children>
                    </DrawingGroup>
                  </DrawingBrush.Drawing>
                </DrawingBrush>
              </Shape.Fill>
            </Rectangle>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter Property="FrameworkElement.Cursor" Value="SizeAll" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Ů" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Background" Value="{StaticResource ũ}" />
    <Setter Property="FrameworkElement.MinHeight" Value="0" />
    <Setter Property="FrameworkElement.MinWidth" Value="0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="Bd" CornerRadius="0,3,3,0" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <Canvas Width="6" Height="7" Margin="7,2,2,2" HorizontalAlignment="Right" VerticalAlignment="Bottom" SnapsToDevicePixels="True">
              <Path Stroke="#FFFFFFFF" Data="M1,1.5L6,1.5" />
              <Path Stroke="{TemplateBinding Control.Foreground}" Data="M0,0.5L5,0.5" />
              <Path Fill="#FFFFFFFF" Data="M0.5,4L6.5,4 3.5,7z" />
              <Path Fill="{TemplateBinding Control.Foreground}" Data="M-0.5,3L5.5,3 2.5,6z" />
            </Canvas>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource Ŝ}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource Ŝ}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource Ũ}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ů" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Background" Value="{StaticResource Ū}" />
    <Setter Property="FrameworkElement.MinHeight" Value="0" />
    <Setter Property="FrameworkElement.MinWidth" Value="0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="Bd" CornerRadius="0,0,3,3" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <Canvas Width="7" Height="6" Margin="2,7,2,2" HorizontalAlignment="Right" VerticalAlignment="Bottom" SnapsToDevicePixels="True">
              <Path Stroke="#FFFFFFFF" Data="M1.5,1L1.5,6" />
              <Path Stroke="{TemplateBinding Control.Foreground}" Data="M0.5,0L0.5,5" />
              <Path Fill="#FFFFFFFF" Data="M3.5,0.5L7,3.5 4,6.5z" />
              <Path Fill="{TemplateBinding Control.Foreground}" Data="M3,-0.5L6,2.5 3,5.5z" />
            </Canvas>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource Ŝ}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource Ŝ}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource Ũ}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ToolBar}" TargetType="{x:Type ToolBar}">
    <Setter Property="Control.Background" Value="{StaticResource Ŧ}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolBar}">
          <Grid Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="True">
            <Grid Name="OverflowGrid" HorizontalAlignment="Right">
              <ToggleButton Name="OverflowButton" IsEnabled="{TemplateBinding ToolBar.HasOverflowItems}" Style="{StaticResource Ů}" ClickMode="Press" FocusVisualStyle="{x:Null}" IsChecked="{Binding Path=IsOverflowOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
              <Popup Name="OverflowPopup" AllowsTransparency="True" Placement="Bottom" StaysOpen="False" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" IsOpen="{Binding Path=IsOverflowOpen,RelativeSource={RelativeSource TemplatedParent}}">
                <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">
                  <Border Background="{StaticResource Ţ}" BorderBrush="{StaticResource š}" BorderThickness="1">
                    <ToolBarOverflowPanel Name="PART_ToolBarOverflowPanel" Margin="2" WrapWidth="200" Focusable="True" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FocusVisualStyle="{x:Null}" />
                  </Border>
                </theme:SystemDropShadowChrome>
              </Popup>
            </Grid>
            <Border Name="MainPanelBorder" Margin="0,0,11,0" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3,3,3,3" Padding="{TemplateBinding Control.Padding}">
              <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                <Thumb Name="ToolBarThumb" Style="{StaticResource ŭ}" Margin="-3,-1,0,0" Width="10" Padding="6,5,1,6" />
                <ContentPresenter Name="ToolBarHeader" ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4,0,4,0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <ToolBarPanel Name="PART_ToolBarPanel" IsItemsHost="True" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
              </DockPanel>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ToolBar.IsOverflowOpen" Value="True">
              <Setter TargetName="ToolBarThumb" Property="UIElement.IsEnabled" Value="False" />
            </Trigger>
            <Trigger Value="{x:Null}" Property="HeaderedItemsControl.Header">
              <Setter TargetName="ToolBarHeader" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ToolBarTray.IsLocked" Value="True">
              <Setter TargetName="ToolBarThumb" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger SourceName="OverflowPopup" Property="Popup.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="True" />
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
            <Trigger Property="ToolBar.Orientation" Value="Vertical">
              <Setter TargetName="Grid" Property="FrameworkElement.Margin" Value="1,3,1,1" />
              <Setter TargetName="OverflowButton" Value="{StaticResource ů}" Property="FrameworkElement.Style" />
              <Setter TargetName="ToolBarThumb" Property="FrameworkElement.Height" Value="10" />
              <Setter TargetName="ToolBarThumb" Property="FrameworkElement.Width" Value="Auto" />
              <Setter TargetName="ToolBarThumb" Property="FrameworkElement.Margin" Value="-1,-3,0,0" />
              <Setter TargetName="ToolBarThumb" Property="Control.Padding" Value="5,6,6,1" />
              <Setter TargetName="ToolBarHeader" Property="FrameworkElement.Margin" Value="0,0,0,4" />
              <Setter TargetName="PART_ToolBarPanel" Property="FrameworkElement.Margin" Value="1,0,2,2" />
              <Setter TargetName="ToolBarThumb" Property="DockPanel.Dock" Value="Top" />
              <Setter TargetName="ToolBarHeader" Property="DockPanel.Dock" Value="Top" />
              <Setter TargetName="OverflowGrid" Property="FrameworkElement.HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="OverflowGrid" Property="FrameworkElement.VerticalAlignment" Value="Bottom" />
              <Setter TargetName="OverflowPopup" Property="Popup.Placement" Value="Right" />
              <Setter TargetName="MainPanelBorder" Property="FrameworkElement.Margin" Value="0,0,0,11" />
              <Setter Value="{StaticResource ŧ}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ToolBarTray}" TargetType="{x:Type ToolBarTray}">
    <Setter Property="ToolBarTray.Background" Value="{StaticResource ť}" />
  </Style>
</ResourceDictionary>